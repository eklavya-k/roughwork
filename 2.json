{
	"type": "StructStreamEdge",
	"properties": {
	  "resource": [
	    {
		 "field_type": "TEXT",
		 "default": "0",
		 "editable": true,
		 "required": false,
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "min_executors"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "30",
		 "editable": true,
		 "required": false,
		 "description": "idle time in seconds after which executors become eligible for removal",
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "executor_idle_timeout"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "500",
		 "editable": true,
		 "required": false,
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "max_executors"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "2048",
		 "editable": true,
		 "required": false,
		 "description": "max memory allowed per executor apart from heap",
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "yarn_executor_memory_overhead"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "3G",
		 "editable": true,
		 "required": false,
		 "description": "memory allocated to executors in GB (Eg. 10G)",
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "executor_memory"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "2",
		 "editable": true,
		 "required": false,
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "executor_cores"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "2g",
		 "editable": true,
		 "required": false,
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "driver_memory"
	    },
	    {
		 "field_options": [
		   "adc-data-hadoop-test",
		   "adc-data-sparkgpu",
		   "adc-data-hbase",
		   "dpgcp-use1d-purple-hadoop",
		   "adc-data-hadoop",
		   "dpgcp-usw1b-hadoop-staging",
		   "adc-crawler-hbase",
		   "dpgcp-use1d-purple-hbase",
		   "adc-auto-opt-hadoop"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "adc-auto-opt-hadoop",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "resource",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "cluster"
	    }
	  ],
	  "extra_configurations": [
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "comma separated list of extra properties to be appended to kafka_output.properties; leave empty if not required",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "extra_kafka_output_properties"
	    },
	    {
		 "field_options": [
		   "latest",
		   "earliest",
		   "timestamp",
		   "offset"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "latest",
		 "editable": true,
		 "required": false,
		 "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "start_from"
	    },
	    {
		 "field_options": [
		   "latest",
		   "earliest",
		   "failure"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "earliest",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "timestamp",
		   "argument": {
			"field_options": [
			  "latest",
			  "earliest",
			  "timestamp",
			  "offset"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "latest",
			"editable": true,
			"required": false,
			"description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
			"category": "extra_configurations",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "start_from"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "fallback_strategy"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "{}",
		 "editable": true,
		 "required": false,
		 "description": "Starting Offsets for every partition in every topic, for example: {\"c8.ac_three_model\":{\"0\":2628557},\"c8.mn.acm.cm\":{\"2\":463136383,\"5\":463256156,\"4\":463285000,\"1\":463219667,\"3\":463129661,\"0\":463107949}}",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "inputFormat": "JSON",
		 "appKillNeeded": true,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "offset",
		   "argument": {
			"field_options": [
			  "latest",
			  "earliest",
			  "timestamp",
			  "offset"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "latest",
			"editable": true,
			"required": false,
			"description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
			"category": "extra_configurations",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "start_from"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "offset_json"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "Used when start_from is set to timestamp. Should be in format yyyyMMddHH",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "timestamp",
		   "argument": {
			"field_options": [
			  "latest",
			  "earliest",
			  "timestamp",
			  "offset"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "latest",
			"editable": true,
			"required": false,
			"description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
			"category": "extra_configurations",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "start_from"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "start_timestamp"
	    },
	    {
		 "field_type": "TEXT",
		 "default": ",",
		 "editable": true,
		 "required": true,
		 "description": "delimiter used for splitting extra properties",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "delimiter"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "extra_job_properties"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "extra_conf"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "1000",
		 "editable": true,
		 "required": false,
		 "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
		 "category": "extra_configurations",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "spark_ui_retained_stages"
	    }
	  ],
	  "output_kafka": [
	    {
		 "field_options": [
		   "false",
		   "true"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "false",
		 "editable": true,
		 "required": false,
		 "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "push_to_kafka"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": false,
		 "required": false,
		 "description": "Flux data store id of output Kafka",
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "output_kafka_store_id"
	    },
	    {
		 "field_options": [
		   "c8-kafka-poc",
		   "hb-magneto-kafka",
		   "dpgcp-use1d-purple",
		   "adc-data-testkafka",
		   "adc-data-kbbkafka",
		   "adc-data-semKafka",
		   "cmgcp-euw1b-kafka",
		   "cmgcp-use1d-kafka",
		   "adc-data-cmkafka",
		   "adc-data-maxKafka",
		   "adc-data-taxonomyKafka",
		   "cmgcp-apse1b-kafka",
		   "cmgcp-usw1b-kafka",
		   "semgcp-uswest-kafka",
		   "adc-data-s2sKafka"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "output_kafka_cluster"
	    },
	    {
		 "field_options": [
		   "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092",
		   "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092",
		   "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092",
		   "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092",
		   "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092",
		   "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092",
		   "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092",
		   "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092",
		   "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092",
		   "172.24.200.115:9092",
		   "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094",
		   "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092",
		   "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092"
		 ],
		 "argumentConditionForFieldOptions": {
		   "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-cmkafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094": {
			"comparator": "EQUALS",
			"value": "adc-data-maxKafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-taxonomyKafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "cmgcp-usw1b-kafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "172.24.200.115:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-testkafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "cmgcp-apse1b-kafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092": {
			"comparator": "EQUALS",
			"value": "semgcp-uswest-kafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-kbbkafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "cmgcp-use1d-kafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-semKafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "dpgcp-use1d-purple",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092": {
			"comparator": "EQUALS",
			"value": "adc-data-s2sKafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   },
		   "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092": {
			"comparator": "EQUALS",
			"value": "cmgcp-euw1b-kafka",
			"argument": {
			  "field_options": [
			    "c8-kafka-poc",
			    "hb-magneto-kafka",
			    "dpgcp-use1d-purple",
			    "adc-data-testkafka",
			    "adc-data-kbbkafka",
			    "adc-data-semKafka",
			    "cmgcp-euw1b-kafka",
			    "cmgcp-use1d-kafka",
			    "adc-data-cmkafka",
			    "adc-data-maxKafka",
			    "adc-data-taxonomyKafka",
			    "cmgcp-apse1b-kafka",
			    "cmgcp-usw1b-kafka",
			    "semgcp-uswest-kafka",
			    "adc-data-s2sKafka"
			  ],
			  "isMultiple": false,
			  "field_type": "LIST",
			  "default": "",
			  "editable": true,
			  "required": false,
			  "description": "",
			  "category": "output_kafka",
			  "unique": false,
			  "advanced": true,
			  "appKillNeeded": true,
			  "hideOnUI": false,
			  "name": "output_kafka_cluster"
			},
			"action": "HIDE"
		   }
		 },
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "bootStrapServers"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "output_topic"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "633554432",
		 "editable": true,
		 "required": false,
		 "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "buffer_memory"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "500",
		 "editable": true,
		 "required": false,
		 "description": "the upper bound on the delay for batching by producer",
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "linger_ms"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "80384",
		 "editable": true,
		 "required": false,
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "batch_size"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "420000",
		 "editable": true,
		 "required": false,
		 "category": "output_kafka",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "argumentCondition": {
		   "comparator": "EQUALS",
		   "value": "true",
		   "argument": {
			"field_options": [
			  "false",
			  "true"
			],
			"isMultiple": false,
			"field_type": "LIST",
			"default": "false",
			"editable": true,
			"required": false,
			"description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
			"category": "output_kafka",
			"unique": false,
			"advanced": true,
			"appKillNeeded": true,
			"hideOnUI": false,
			"name": "push_to_kafka"
		   },
		   "action": "HIDE"
		 },
		 "hideOnUI": false,
		 "name": "request_timeout_ms"
	    }
	  ],
	  "general": [
	    {
		 "field_type": "TEXT",
		 "default": "ts",
		 "editable": true,
		 "required": false,
		 "category": "general",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "output_partitions_list"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "-1",
		 "editable": true,
		 "required": false,
		 "description": "number of output partitions to use if repartitioning.",
		 "category": "general",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "output_splits"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "-1",
		 "editable": true,
		 "required": false,
		 "description": "input partitions",
		 "category": "general",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "input_splits"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "-1",
		 "editable": true,
		 "required": false,
		 "description": "Approximate number of offsets/messages to process per task. If needed bigger tasks would be split, such that task size remains around this value.",
		 "category": "general",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "offsets_per_task"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "/prod_code/Rule-Manager/master/scripts/StructStreamEdge/spark240/run.sh",
		 "editable": true,
		 "required": false,
		 "category": "general",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "script_path"
	    }
	  ],
	  "ETL_Properties": [
	    {
		 "field_type": "TEXT",
		 "default": "_SUCCESS",
		 "editable": true,
		 "required": false,
		 "description": "Success flag will be created by this name in the output directory",
		 "category": "ETL_Properties",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "success_flag_name"
	    },
	    {
		 "field_options": [
		   "ds_column_schema",
		   "fields_meta"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "fields_meta",
		 "editable": true,
		 "required": false,
		 "description": "table to use for getting Schema details",
		 "category": "ETL_Properties",
		 "unique": false,
		 "advanced": false,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "schema_source"
	    },
	    {
		 "field_type": "TEXT",
		 "editable": true,
		 "required": false,
		 "description": "ETL transformations will be visible by this name on the Flux Data tab.",
		 "category": "ETL_Properties",
		 "unique": false,
		 "advanced": false,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "default": "",
		 "name": "etl_rule_source"
	    },
	    {
		 "field_options": [
		   "None",
		   "ad_click",
		   "french_keyword_categories",
		   "google_domain_categories",
		   "google_keyword_categories",
		   "google_url_categories",
		   "hb_adclick",
		   "homepage_user_history",
		   "kbb_logs",
		   "keyword",
		   "kmean_domain_category",
		   "kmean_url_category",
		   "kwd_category",
		   "msn_log",
		   "newsPromptStream",
		   "pageview",
		   "prebid_auction_participants",
		   "prebid_rendered_ad",
		   "test",
		   "video_error",
		   "video_event",
		   "video_rtblog",
		   "viewable_iframe_impression",
		   "visible_impression",
		   "ALL",
		   "local_click",
		   "local_click_expand",
		   "arb",
		   "perform_broad_match_max_expand",
		   "perform_broad_match_max",
		   "adx_log",
		   "ybnca_adx_log",
		   "ad_click_keyword_data_one_time",
		   "kbb_logs_expanded",
		   "dmm_rendered_ad",
		   "dmm_auction_participants",
		   "test_bulk_batch",
		   "extract_url_categories_adhoc",
		   "anushree_adhoc",
		   "dm_ad_click",
		   "dm_page_view",
		   "dm_kw_details",
		   "dm_provider_timezone_mapping",
		   "etl_test",
		   "sparta_email_tracking",
		   "home_page",
		   "bulk_processor_test",
		   "vidharth_adhoc",
		   "web_result_view",
		   "extract_domain_category_adhoc",
		   "web_result",
		   "extract_keyword_category_adhoc",
		   "max_serving_logs",
		   "sem_sell_impressions",
		   "reporting",
		   "sem_sell_clicks",
		   "sem_sell_clicks_dm",
		   "sem_buy_sell_snap_account",
		   "sem_buy_sell_snap_campaign",
		   "sem_buy_sell_snap_adgroup",
		   "sem_buy_sell",
		   "sem_buy_sell_snap_ad",
		   "db_utils_unit_test",
		   "etl_sid_adhoc",
		   "apps_stats_audit",
		   "sem_keyword_category_hbase",
		   "dm_kw",
		   "max_concept_match",
		   "sem_buy_sell_cost_distribution",
		   "sparta",
		   "ad_click_test",
		   "visible_impression_flow",
		   "ad_click_test_flow",
		   "struct_stream_camus",
		   "sem_sell_impressions_client_side",
		   "dm_one_click_ad_data",
		   "yarn_application_metrics",
		   "flux_yarn_app_level_metrics",
		   "yarn_queue_usage_stats",
		   "keyword_attribution_hbase",
		   "empty",
		   "extract_url_category_adhoc_2",
		   "fbbp",
		   "sem_ads",
		   "layer1_impression",
		   "ad_details",
		   "max_view_record",
		   "max_view_record_hbase",
		   "max_view_record_flow_hbase",
		   "max_impression_log",
		   "dm_provider_mapping_hbase",
		   "struct_stream_camus_timestamp",
		   "apps_reporting",
		   "auditor_test",
		   "test_blank",
		   "ra_visible_impressions",
		   "ra)visible_impressions",
		   "keyword_view_popcat",
		   "max_serving_logs_test",
		   "max_conversion_logs",
		   "dm_ad_click_test_flow",
		   "dm_page_view_test_flow",
		   "s2s_ad_feed",
		   "dmp_segments",
		   "max_converison_debug_test",
		   "kbb_logs_camus",
		   "kbb_logs_expanded_camus",
		   "process_logs",
		   "dmp_user_segment_data",
		   "dm_local_adclick",
		   "dm_local_addump",
		   "max_event_conversion",
		   "max_event_confirmclick",
		   "max_event_qualifiedads",
		   "max_event_impression",
		   "max_event_view_priority",
		   "max_event_view",
		   "max_event_click",
		   "dm_external_click_postback_log",
		   "topical_keyword_performance",
		   "rightJoinTest",
		   "max_event_all_qualifiedads",
		   "bid_logs",
		   "sem_sell_clicks_realtime",
		   "sem_entity_data",
		   "visitor_log",
		   "subscriber_notification_log",
		   "ra_ebay_dump_test",
		   "ad_details_ra_ebay",
		   "url_topics",
		   "url_topics_struct",
		   "hype_learning_stats_ctr_hourly",
		   "hype_learning_stat_ctr_hourly",
		   "dm_raw_ad_click",
		   "hype_learning_stats_impressions_ctr_hourly",
		   "learned_pirate_keyword",
		   "application_resource_request",
		   "sem_widget_impressions",
		   "sem_widget_clicks",
		   "dmp_user_segment_batch",
		   "sem_affiliate_page_view",
		   "sem_affiliate_ad_impression",
		   "sem_affiliate_ad_click",
		   "sem_affiliate_piggy_back_info",
		   "no_rule_source",
		   "dm_raw_page_view",
		   "kbb_logs_c13",
		   "kbb_logs_madmax",
		   "kbb_logs_madmax_separate",
		   "layer1_impression_umang_test",
		   "kbb_bid_test_ankur",
		   "kbb_logs_non_bid_test",
		   "visible_impression_resource_test",
		   "kafka_click_logs",
		   "max_conversion_calls",
		   "max_logs_raw_impression",
		   "d2d_google_analytics",
		   "apps_camus",
		   "sem_affiliate_page_view_test",
		   "sample_sem_affiliate_piggy_back",
		   "training_affiliate_page_view",
		   "training_sem_affiliate_piggy_back",
		   "sparta_etl_parquet",
		   "page_view_ankur",
		   "page_view_test",
		   "kbb_logs_expanded_madmax",
		   "rpm_immediate_learning",
		   "rpm_immediate_learner",
		   "keyword_view_test",
		   "max_logs_raw_clickconfirm",
		   "sparta_reproccess",
		   "sparta_etl_parquet_new",
		   "max_logs_raw_conversion",
		   "sem_sell_clicks_test",
		   "fo_details",
		   "smm_ap_logs",
		   "prebid_provider_request",
		   "dm_one_click_ad_data_test",
		   "ad_click_hemali_test",
		   "keyword_click_ginsu",
		   "page_view_flow",
		   "keyword_view_flow",
		   "ad_click_stream",
		   "ad_click_batch",
		   "ad_click_ginsu",
		   "hbase_testing",
		   "hbase_get_testing",
		   "keyword_view_streaming",
		   "max_event_test",
		   "max_logs_raw_adresponselist",
		   "platform_storage_ml",
		   "ad_click_recovery",
		   "kbb_logs_test",
		   "kbb_logs_expanded_test",
		   "hype_ctr_hourly_arpit",
		   "external_jar_test",
		   "ra_ad_click",
		   "keyword_click",
		   "ad_click_ginsu_test",
		   "adhover",
		   "prebid_rendered_ad_test",
		   "prebid_rendered_ad_test_1",
		   "c8_hadoop_yarn",
		   "page_view_snap",
		   "bid_api",
		   "nid_contextual_reporting",
		   "contextual_impressions",
		   "page_view_snap_batch",
		   "ad_click_direct",
		   "max_rawcloudfront_conv_logs",
		   "tac",
		   "prebid_auction_participants_business",
		   "vought",
		   "rule_test_etl",
		   "contextual_put",
		   "c8_hadoop_yarn_spark",
		   "contextual_test",
		   "c8_hadoop_yarn_test",
		   "ankur_stuck_test",
		   "contextual_api",
		   "sem_sell_click_dm_test",
		   "prebid_rendered_ad_test_2",
		   "max_visitor_segment_logs",
		   "max_conversion_pixel_event_stats",
		   "prebid_rendered_ad_test_3",
		   "ad_click_test_1",
		   "ap_bid_api",
		   "ad_click_eos",
		   "ra_bid_api",
		   "test_hbase",
		   "hype_learning_stats_ctr_realtime",
		   "max_conversion_audited_logs",
		   "c8_auto_kbb_user_segment_keyword",
		   "ad_click_final_test",
		   "web_result_test",
		   "kbb_user_segment_dmp",
		   "kbb_user_segment_dmp_batch",
		   "ad_performance_measurement",
		   "l1log",
		   "kbb_logs_expanded_flow_test",
		   "kbb_logs_expanded_flow_test_batch",
		   "kbb_logs_expanded_batch",
		   "max_logs_pixel_system_event",
		   "dm_external_click_postback_logback",
		   "hype_realtime_conversions",
		   "ankur_bid_put",
		   "madmax_test",
		   "max_viewable_impression_logs",
		   "user_data_platform",
		   "app_logs",
		   "cpa_logs",
		   "ra_recovery",
		   "keyword_view_spark",
		   "cpa_logs_test",
		   "max_autos_leadgen_conversion_logs",
		   "ra_page_view",
		   "ac_contextual_get",
		   "contextual_api_test",
		   "hemali_adhoc",
		   "contextual_batch_put",
		   "ra_ad_detail",
		   "ra_ad_details",
		   "bid_api_ad_click",
		   "prebid_rendered_ad_bdata_hbase",
		   "hadoop_vault_log_agg",
		   "hadoop_vault_log",
		   "hadoop_logs_rule",
		   "prebidrenderedad_spark_rpm",
		   "agg_ra_test",
		   "flow_alerts",
		   "mowx_lost_opportunity",
		   "max_ozil_crawl_data",
		   "flow_kt_demo_new",
		   "analytics_events",
		   "keyword_stats_test",
		   "agg_ra_batch",
		   "agg_batch_ra",
		   "smm_service_logs",
		   "sem_ginsu_keyword_impressions",
		   "sem_ginsu_keyword_clicks",
		   "druid_historical_metrics",
		   "analytics_optimiser_log",
		   "dm_provider_expand",
		   "kbb_madmax_expanded_batch",
		   "adclick_demo",
		   "ad_details_batch",
		   "cleon_orderbooks",
		   "cleon_tickers",
		   "immediate_pattern_bidder_api",
		   "dataplatform_adc_journald",
		   "prebid_recovery",
		   "usersegment_id",
		   "ginsu_beacon_logmaster",
		   "analytics_events_qa",
		   "usersegment_get",
		   "web_results_google_csa",
		   "ad_click_stop_loss",
		   "ra_stop_loss",
		   "usersegment_new",
		   "spotlight_event_pixel_logging",
		   "pb_snotify",
		   "rendered_ad_issue",
		   "process_logs_hourly",
		   "sem_google_recaptcha_impressions",
		   "prog_ra",
		   "sem_sell_impressions_test",
		   "prog_pr",
		   "creative_logs",
		   "delayed_data_rule",
		   "analytics_backend_logs",
		   "delayed_data_compact_rule",
		   "ap_camus_data",
		   "ra_hbase_test",
		   "usersegment_apollo",
		   "ap_hbase",
		   "prog_ap",
		   "page_type_format",
		   "s2s_logs",
		   "rule_source_nitish_test",
		   "anunay_delayed_data",
		   "hemali_test",
		   "ad_click_join_test",
		   "google_suggested_terms",
		   "infra_metrics",
		   "dataplatform_adc",
		   "ra_bidder_alert_agg",
		   "ap_bidder_alert_agg",
		   "ua_device_atlas",
		   "dataplatform_adc_journald_hive",
		   "demand_reports_summary",
		   "dataplatform_adc_journald_hive_1",
		   "pb_snotify_enriched",
		   "demand_reports_summary_test",
		   "demand_reports_summary_backfill",
		   "prebid_acution_participants",
		   "analytics_backendlogs",
		   "contextual_api_v2",
		   "app_camus_compaction",
		   "analytics_backend_log",
		   "analytics_backend_logs_hdfs",
		   "max_conversion_reporting_logs",
		   "demand_advertiser_data",
		   "ra_ad_detail_test",
		   "short_url",
		   "short_url_stage",
		   "short_url_v2",
		   "prebid_rendered_ad_new1",
		   "pv_new",
		   "kbb_basis2",
		   "ac_basis_test",
		   "brandsafety",
		   "ra_bidder_alert_agg_test",
		   "curated_deals_df_test",
		   "adc_billing",
		   "hourly_ad_exchange_summary",
		   "hourly_open_bidding_summary",
		   "programmatic_ap_df",
		   "daily_rendered_ad_advertiser_summary",
		   "deals_debug",
		   "topic_rendered_ad_summary",
		   "dynamic_bid_floor",
		   "pluto_join_test",
		   "IL_bigquery",
		   "max_coversions",
		   "max_conversions",
		   "IL_bigquery_2",
		   "IL_bigquery_3",
		   "hemali_adhoc_test",
		   "test_multi_cluster",
		   "max_impressions",
		   "curated_deals_lib",
		   "prog_adp",
		   "programmatic_ap_df_test",
		   "hourly_ad_exchange_v2",
		   "hourly_open_bidding_v2",
		   "deal_multi",
		   "ap_dgcp_test",
		   "prog_multi",
		   "ra_dgcp_test",
		   "prebid_multi",
		   "direct_house_prog",
		   "hourly_unfilled_etl",
		   "prog_ap_rules",
		   "prog_pr_rules",
		   "prog_ra_rules",
		   "ap_raw_yahoo",
		   "ra_raw_yahoo",
		   "raw_prebid_rendered_ad ",
		   "raw_prebid_auction_participants",
		   "raw_prebid_auction_participants  ",
		   "raw_prebid_provider_request",
		   "raw_ebda_slot_debug",
		   "raw_ad_performance_measurement",
		   "raw_slot_debug_logs",
		   "raw_hb_error_logs",
		   "raw_prebid_failover_table",
		   "raw_js_error_log",
		   "raw_mowgli_logs",
		   "raw_mowx_issues",
		   "ad_click_nitish_test",
		   "raw_omni_logs",
		   "prebid_auction_participants_yahoo_test",
		   "raw_video_perf  ",
		   "raw_video_perf_ra  ",
		   "raw_hb_l1_log",
		   "raw_dynamic_bid_floor  ",
		   "ap_dgcp_test_y1",
		   "unified_direct_house_prog",
		   "unified_hourly_ad_exchange_summary",
		   "unified_hourly_open_bidding_summary",
		   "unified_hourly_unfilled_etl",
		   "raw_ra_nitish_test",
		   "raw_project_events",
		   "raw_auto_refresh_log",
		   "raw_adp_viewability",
		   "prog_atlas_adp_rules",
		   "raw_sherlock_logs",
		   "raw_konom_metrics",
		   "raw_adp_viewability_v2",
		   "sem_sell_impressions_test2",
		   "yahoo_stats_big_query",
		   "unified_direct_house_prog_backup",
		   "unified_direct_house_prog1",
		   "Yahoo_BigQuery_Pipeline",
		   "unified_hourly_ad_exchange_summary1",
		   "unified_hourly_open_bidding_summary1",
		   "unified_hourly_unfilled1",
		   "raw_prebid_auction_participants_realtime",
		   "ad_click_copy  ",
		   "Yahoo_Stats_Hourly_BigQuery",
		   "ems_serving_logs",
		   "max_viewable_impressions",
		   "max_clicks",
		   "no_rules",
		   "pv_snap_batch",
		   "prog_struct_test",
		   "logs_processing",
		   "raw_abp_logs  ",
		   "logs_processing_new",
		   "Log_processing_kbbDS",
		   "error_generator_etl",
		   "raw_logging_metrics",
		   "raw_bid_request_log",
		   "raw_ad_code_log",
		   "sem_keyword_clicks",
		   "l1log_deduplication",
		   "sem_keyword_impressions",
		   "dmm_ap",
		   "dmm_ra",
		   "sem_sell_impressions_source",
		   "template_uuid_logs",
		   "ra_deduplication",
		   "raw_expired_logging_events",
		   "raw_hb_audit_log",
		   "test_hive_on_gcs",
		   "ad_click_nitish_test_2",
		   "raw_ae_creative_data",
		   "raw_ae_events",
		   "raw_ae_result",
		   "iab_google_url_categories",
		   "raw_ebda_cookie_sync",
		   "stream_agg_edge_test",
		   "raw_lost_opportunity",
		   "stream_agg_edge_test2",
		   "stoploss_ad_click_flow",
		   "stoploss_ra_flow",
		   "adc_cbb_contextual",
		   "automation_etl_rule_source",
		   "yahoo_stats_test_overwrite",
		   "bss_ap_summary",
		   "dynamic_bid_floor_batch",
		   "sem_page_impression",
		   "raw_druid_metrics",
		   "raw_adp_viewability_batch",
		   "raw_analytics_optimiser",
		   "raw_dynamic_bf_batch",
		   "ap_bidder_agg_batch",
		   "ad_click_kshem",
		   "bss_ra_summary",
		   "raw_visitor_metrics",
		   "bss_valid_bid_ap_summary",
		   "raw_video_completion_rate",
		   "nitish_test_raw_ra",
		   "raw_supply_latency",
		   "raw_demand_latency",
		   "pr_ap_ra_yahoo",
		   "video_perf_join_test",
		   "crawled_url_title",
		   "ad_click_stoploss",
		   "ra_stoploss",
		   "url_ip_data_rules",
		   "raw_bes_metrics",
		   "sem_performance_metrics",
		   "raw_ssp_server_sys_log_rules",
		   "raw_ssp_server_metric_log_rule",
		   "raw_ssp_server_raw_log",
		   "raw_ap_stream_agg_test",
		   "spark_analytics_log",
		   "rpm_page_view_stats",
		   "ad_click_stoploss_debug",
		   "prebid_rendered_ad_reprocess",
		   "stoploss_debug_ad",
		   "mobile_app_finance",
		   "provider_payment_info_camus",
		   "raw_ae_client",
		   "video_error_success_rule",
		   "bidder_logs_raw",
		   "bidder_logs_batch",
		   "bidder_logs",
		   "bidder_logs_hbase",
		   "pb_snotify_enriched_batch",
		   "raw_ra_df_nitish_test",
		   "raw_ra_df_nitish_test_2",
		   "raw_ra_df_test_nitish",
		   "ap_agg_batch_sampling",
		   "test_kafka_avro_topics",
		   "page_view_basis2_rule",
		   "raw_ap_agg_test",
		   "bidder_ad_click",
		   "intent_labs_enr_stg_rule",
		   "raw_ad_performance_debug_log",
		   "ap_aggregate_rules",
		   "kv_snap_test_rules",
		   "intent_labs_enr_prod_rule",
		   "raw_ap_transform",
		   "ad_click_suryansh_test",
		   "ac_kpd_test",
		   "ae_events",
		   "ae_results",
		   "ae_creative_data",
		   "ae_client",
		   "bes_metrics",
		   "redis-df-1",
		   "redis-ds-test-22",
		   "sem_article_impression",
		   "ad_click_in",
		   "enr_il_deduplication",
		   "daily_uncategorised_sell_keyword",
		   "page_view_et",
		   "ra_reprocess",
		   "prebid_auction_participants_et",
		   "prebid_rendered_ad_et",
		   "intent_labs_enr_prod_rule_revenue",
		   "intent_labs_enr_prod_rule_other",
		   "intent_labs_enr_prod_rule_cost",
		   "ra_sampling",
		   "prebid_provider_request_et",
		   "intent_labs_enr_prod_rule_costrule",
		   "bidder_page_view",
		   "bidder_keyword_click",
		   "keyword_click_et",
		   "keyword_view_et",
		   "raw_hb_access_log",
		   "enr_il_deduplication_stg",
		   "intent_labs_enr_prod_multipart",
		   "intent_labs_enr_stg_late_rule",
		   "",
		   "ra_migration_test",
		   "ra_migration",
		   "video_performance",
		   "intent_labs_enr_stg_part_rule",
		   "raw_cop_performance_logs",
		   "template_uuid_test",
		   "sem_keyword_clicks_flow_test",
		   "sem_page_impressions_test",
		   "sem_keyword_impression_test",
		   "sem_google_recaptcha_impressions_test",
		   "google_suggested_terms_test",
		   "sem_ginsu_keyword_clicks_test",
		   "web_results_google_csa_test",
		   "sem_article_impression_test",
		   "sem_performance_metrics_test",
		   "sem_ginsu_keyword_impressions_test",
		   "google_suggested_terms_test_1",
		   "sem_google_recaptcha_impressions_test_1",
		   "sem_article_impression_test_1",
		   "web_results_google_csa_test_1",
		   "sem_ginsu_keyword_clicks_test_1",
		   "sem_performance_metrics_test_1",
		   "sem_ginsu_keyword_impressions_test_1",
		   "video_events_pureplay",
		   "video_events_pureplay_1",
		   "eos_test_logs",
		   "interface_apps",
		   "app_api",
		   "app_db",
		   "app_extapi",
		   "video_dump_rules",
		   "ebda_timeline",
		   "mowx_timeline",
		   "bes_ruleset",
		   "ybn_creative_blocking",
		   "url_keyword_contextuality",
		   "ps_application_logs",
		   "nv_sv_ps_application_logs",
		   "dmp_segments_put",
		   "autotuning_load_data",
		   "autotuning_load_data_1",
		   "autotuning_load_data_2",
		   "autotuning_load_data_3",
		   "dmp_get",
		   "nv_sv_wp_application_logs",
		   "join-opt-ad_click",
		   "ra-join-opt",
		   "ad_click_stoploss_testing",
		   "server_side_ra",
		   "ad_quality_ra",
		   "ap_deals_sampling",
		   "flow_vl2r_app_base_test",
		   "anti_spam_views",
		   "flow_test_vl2r_app_base",
		   "ap_deals_sampling_new",
		   "suryansh_prebid_auction_participants_test",
		   "ad_click_stoploss_audit",
		   "ap_flux_sampling",
		   "sem_keyword_compliance_regulator_app_logs",
		   "ashish_test_1",
		   "test_nv_sv_ps_application_logs",
		   "segments_optout",
		   "request_timeline_debug",
		   "sem_nv_sv_ps_application_logs",
		   "api_proxy_service_logs",
		   "ortb_ebda_requests",
		   "sem_kwd_ad_block_impression",
		   "test_ashish_ra_1",
		   "test_mobile_model",
		   "igbid_use1d",
		   "igbid_euw1b",
		   "igbid_apse1b",
		   "igbid_usw1b",
		   "bidder_ad_click_recovery",
		   "test_new_cluster_ashish",
		   "test_batch_rerun_Ashish2",
		   "ad_click_fast_audit",
		   "request_ortb_transform",
		   "ra_stoploss_test_newcluster",
		   "ozil_crawler_output_redis_data_backup",
		   "ortb_ebda_requests_test",
		   "sub_dm_ad_click",
		   "\nortb_ebda_requests",
		   "sem_sell_impression_recovery",
		   "ra_stoploss_test",
		   "ra_stoploss_ashish_test",
		   "flow_test_vr_hourly_agg",
		   "ra_stoploss_test_ashish_adc",
		   "adp_predicted_viewabitlity",
		   "ra_stoploss_test_ashish_adc_v2",
		   "ortb_ebda_outgoing_request",
		   "video_completion_rate",
		   "pb_snotify_snap",
		   "adc_data_yarn_app_metrics",
		   "ap_rules_copy",
		   "kbb_basis2_copy",
		   "pv_recv_rules",
		   "sem_api_proxy_service_log",
		   "cbb_url_topics",
		   "ap_stream_agg",
		   "keyword_dump",
		   "sem_kwd_ad_block_impression_1",
		   "flow_test_vr_app_base_compressed_33",
		   "sem_sell_impression_recovery_2",
		   "ad_kwd_test",
		   "end_user_behaviour_data",
		   "stoploss_debug_ad_test1",
		   "prebid_rendered_ad_latest_copy",
		   "rerun_test_stream_debug_ad",
		   "rerun_test_stream_debug_ad_2",
		   "cbb_kwd_topics",
		   "server_side_debug",
		   "sdk_stats",
		   "sdk_stats_camus",
		   "sdk_stats_hbase_put",
		   "prebid_rendered_ad_expired_data",
		   "hash_extract_rule_test",
		   "hive_udf_tests",
		   "ra_ad_clog_expired",
		   "curated_deals_lib_test",
		   "unaudited_rules_test",
		   "dwm_ra_rules",
		   "dwm_ra_source_hdfs_data",
		   "page_view_flow_recovery",
		   "keyword_dump_suggested",
		   "page_view_test_eklavya",
		   "pb_snotify_enriched_test_adc",
		   "join-dep_test",
		   "ch-test-1",
		   "S3etl",
		   "S3etl1",
		   "join-dep-ad_click",
		   "ch-test-2",
		   "sql_testing",
		   "sql8_testing_sub",
		   "ad_click_new_hemali",
		   "pb_snotify_enriched_batch_opt",
		   "unified_tam",
		   "ra_test_v2",
		   "dmm_pb_snotify",
		   "unified_tam_etl",
		   "tam_backfill",
		   "ad_click_copy_join_remove_test",
		   "parallel_ successflag_test_suryansh",
		   "testflux",
		   "dwm_kafka_data_rule",
		   "dwm-ra-rules",
		   "madmax_key_value_logging",
		   "bsv_test",
		   "s3etl2",
		   "visible_impression_et",
		   "unified_tam_publisher2_etl",
		   "kbb_mistique_insight_logs",
		   "max_keyword_kin_cluster_data",
		   "page_view_india",
		   "ad_click_india",
		   "prebid_rendered_ad_india",
		   "keyword_click_india",
		   "keyword_view_india",
		   "stream_agg_timestamp",
		   "v2apitest",
		   "fast_audit_all_details"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "None",
		 "editable": true,
		 "required": false,
		 "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
		 "category": "ETL_Properties",
		 "unique": false,
		 "advanced": false,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "use_existing_rules"
	    }
	  ],
	  "stream": [
	    {
		 "field_type": "TEXT",
		 "default": "600",
		 "editable": true,
		 "required": false,
		 "description": "stream micro batch duration in seconds",
		 "category": "stream",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "stream_batch_duration"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "1000000",
		 "editable": true,
		 "required": false,
		 "description": "Use maxOffsetsPerTrigger option to limit the number of records to fetch per trigger.",
		 "category": "stream",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": false,
		 "hideOnUI": false,
		 "name": "max_offsets_per_trigger"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "stream",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "depends_on_edges"
	    }
	  ],
	  "health_thresholds": [
	    {
		 "field_type": "TEXT",
		 "default": "3",
		 "editable": true,
		 "required": false,
		 "description": "warning threshold for delay in success flag creation",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "success_delay_warning",
		 "alertUIShow": "true",
		 "alertLabel": "Success Delay Warning",
		 "alertPriority": 3
	    },
	    {
		 "field_type": "TEXT",
		 "default": "5",
		 "editable": true,
		 "required": false,
		 "description": "critical threshold for delay in success flag creation",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "success_delay_critical",
		 "alertUIShow": "true",
		 "alertLabel": "Success Delay Critical",
		 "alertPriority": 3
	    },
	    {
		 "field_type": "TEXT",
		 "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
		 "editable": true,
		 "required": false,
		 "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "inputFormat": "CHAR_SEP_PROPS",
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "stream_delay_thresholds",
		 "alertUIShow": "sourceDelay,processingDelay",
		 "alertLabel": "Source Delay,Processing Delay",
		 "alertPriority": 1
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "Kafka topics to be omitted for source delay calculation",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "omit_kafka_topics",
		 "alertUIShow": "true",
		 "alertLabel": "Omit Kafka Topics",
		 "alertPriority": 4
	    },
	    {
		 "field_type": "TEXT",
		 "default": "30",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "stuck_duration_warning_threshold",
		 "alertUIShow": "true",
		 "alertLabel": "Stuck Duration Warning",
		 "alertPriority": 2
	    },
	    {
		 "field_type": "TEXT",
		 "default": "60",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "stuck_duration_critical_threshold",
		 "alertUIShow": "true",
		 "alertLabel": "Stuck Duration Critical",
		 "alertPriority": 2
	    },
	    {
		 "field_options": [
		   "1",
		   "0"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "0",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "snooze"
	    },
	    {
		 "field_options": [
		   "true",
		   "false"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "true",
		 "editable": true,
		 "required": false,
		 "description": "Enable alerts for consistency",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "enable_consistency_alerts"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "0:0",
		 "editable": true,
		 "required": false,
		 "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
		 "category": "health_thresholds",
		 "unique": false,
		 "advanced": true,
		 "inputFormat": "RATIO",
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "row_count_deviation_percentage"
	    }
	  ],
	  "stuck": [
	    {
		 "field_options": [
		   "1",
		   "0"
		 ],
		 "isMultiple": false,
		 "field_type": "LIST",
		 "default": "0",
		 "editable": true,
		 "required": false,
		 "description": "",
		 "category": "stuck",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "kill_when_stuck"
	    }
	  ],
	  "ingestion_config": [
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
		 "category": "ingestion_config",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "spark_processing_jar"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
		 "category": "ingestion_config",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "rule_service_jar"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "",
		 "editable": true,
		 "required": false,
		 "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
		 "category": "ingestion_config",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "hideOnUI": false,
		 "name": "extra_jars"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
		 "editable": true,
		 "required": false,
		 "description": "jar files to include in the driver classpath",
		 "category": "ingestion_config",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "display_name": "data_driver_classpath",
		 "hideOnUI": false,
		 "name": "DATA_DRIVER_CLASSPATH"
	    },
	    {
		 "field_type": "TEXT",
		 "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
		 "editable": true,
		 "required": false,
		 "description": "jar files to include in the executor classpath",
		 "category": "ingestion_config",
		 "unique": false,
		 "advanced": true,
		 "appKillNeeded": true,
		 "display_name": "data_executor_classpath",
		 "hideOnUI": false,
		 "name": "DATA_EXECUTOR_CLASSPATH"
	    }
	  ]
	}
   }