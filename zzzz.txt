{
  "validEdges": [
    {
      "sourceType": "S3DataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "S3DataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ElasticSearchDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "StreamEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "StreamEdge",
        "StreamAggregateEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "StreamAggregateEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "DruidStreamEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "StructStreamEdge",
        "StreamAggregateEdge",
        "StructStreamCamusEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "StreamEdge",
        "NoopStreamEdge",
        "StreamAggregateEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "KafkaDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "GcsDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "DruidNativeEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DruidDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "DruidBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "BatchEdge",
        "AggregateBatchEdge",
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "HdfsDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "BatchEdgeV2",
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "BigQueryDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsModelStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "SQLStreamEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "BatchEdge",
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "SQLDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "DummyStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "AggregateBatchEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "ClickHouseDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "S3DataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "ElasticSearchDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "KafkaDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "GcsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "DruidDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "HdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "BigQueryDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "MLHdfsModelStore",
      "edgeTypes": [
        "MLTrainingEdge",
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "SQLDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "DummyStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "ClickHouseDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    },
    {
      "sourceType": "MLHdfsDataStore",
      "sinkType": "MLHdfsDataStore",
      "edgeTypes": [
        "TestEdge"
      ]
    }
  ],
  "edgeStructures": [
    {
      "type": "SQLStreamEdge",
      "properties": {
        "general": [
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/StreamEdge/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "extra_configurations": [
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "3G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "hdfs://nameservice1/prod_code/Data/master/spark-sql-patch/jars/spark-sql-patch-1.0-SNAPSHOT.jar,hdfs://nameservice1/var/lib/spark/Database-2.0.jar,hdfs://nameservice1/var/lib/spark/MediaUrlWrapper-0.2.10.jar,hdfs://nameservice1/var/lib/spark/commons-pool2-2.4.2.jar,hdfs://nameservice1/var/lib/spark/jedis-2.8.1.jar,hdfs://nameservice1/var/lib/spark/UserAgentDetection-2.0.jar,hdfs://nameservice1/var/lib/spark/RPMUtils-1.0.8.jar,hdfs://nameservice1/var/lib/spark/hbase-client-1.2.0.jar,hdfs://nameservice1/var/lib/spark/MediaUrl-2.0.1.jar,hdfs://nameservice1/var/lib/ss-shaded-0.8.2.2.jar,hdfs://nameservice1/var/lib/spark/ua-parser-1.3.2-SNAPSHOT-jar-with-dependencies.jar,hdfs://nameservice1/var/lib/spark/mysql-connector-java-5.1.6.jar,hdfs://nameservice1/var/lib/spark-sql-kafka-0-10_2.11-2.2.0.jar,hdfs://nameservice1/var/lib/kafka_0010/spark-streaming-kafka-0-10_2.11-2.2.0.jar,hdfs://nameservice1/var/lib/kafka_0010/spark-streaming_2.11-2.2.0.jar,hdfs://nameservice1/var/lib/kafka_0010/kafka-clients-2.5.0.jar,hdfs://nameservice1/var/lib/kafka-graphite-clients-0.10.2.jar,hdfs://nameservice1/user/data_admin/sql/connector-1.0-SNAPSHOT.jar,hdfs://nameservice1/user/data_admin/sql/mssql-jdbc-7.2.2.jre8.jar,hdfs://nameservice1/user/data_admin/sql/slick_2.11-3.3.1.jar,hdfs://nameservice1/user/data_admin/sql/reactive-streams-1.0.0.jar,hdfs://nameservice1/var/lib/spark-sql-kafka-0-10_2.11-2.2.0.jar,hdfs://nameservice1/prod_code/sparkcustomquerypatch/alternate/jars/sparkCustomQueryPatchCloudera4-1.0.jar",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.2.0.jar:kafka-clients-1.1.0.jar:metrics.properties:etl-gson-2.2.5.jar:connector-1.0-SNAPSHOT.jar:spark-sql-kafka-0-10_2.11-2.2.0.jar:mssql-jdbc-7.2.2.jre8.jar:slick_2.11-3.3.1.jar:sparkCustomQueryPatchCloudera4-1.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.2.0.jar:kafka-clients-1.1.0.jar:metrics.properties:etl-gson-2.2.5.jar:connector-1.0-SNAPSHOT.jar:spark-sql-kafka-0-10_2.11-2.2.0.jar:mssql-jdbc-7.2.2.jre8.jar:slick_2.11-3.3.1.jar:reactive-streams-1.0.0.jar:sparkCustomQueryPatchCloudera4-1.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ]
      }
    },
    {
      "type": "BatchEdge",
      "properties": {
        "ingestion_config": [
          {
            "field_options": [
              "BatchContext",
              "SparkSessionContext"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "BatchContext",
            "editable": true,
            "required": false,
            "description": "Main class used in spark-submit command",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "context_class"
          },
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/BatchEdge/spark240/run.sh",
            "editable": true,
            "required": false,
            "description": "the hdfs path to the run.sh script for execution",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "run_script_path"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of input partitions to be considered at once",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "input_splits",
            "hideOnUI": false,
            "name": "splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "the count of output partitions to utilize in case of repartitioning",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "json",
            "editable": true,
            "required": false,
            "description": "format in which data is present within the input directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_data_format"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "required format for writing data in the output directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_data_format"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ],
        "scheduler": [
          {
            "field_options": [
              "Oozie",
              "Airflow"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "editable": true,
            "required": false,
            "description": "choose a scheduler framework for orchestrating batch job scheduling",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduler_service"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "start date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "start time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "end date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "end time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "refers to the number of instances that will run simultaneously in parallel",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "concurrency"
          },
          {
            "field_type": "TEXT",
            "default": "1440",
            "editable": true,
            "required": false,
            "description": "the maximum time in minutes which an action will wait in waiting or ready state before going to timed-out state, put -1 if never timed-out ",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "timeout"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "number of retries for a failed task",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "retries",
            "hideOnUI": false,
            "name": "RETRIES_HOLDER"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "when true, ingestion will only start once success file is available at input data location",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_path_wait",
            "hideOnUI": false,
            "name": "wait_on_input_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated success flag locations to wait (partition must be Included) Eg. home/path/ts=",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "dependent_flags_locations",
            "hideOnUI": false,
            "name": "success_flag_locations"
          },
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "comma separated success flag names",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "dependent_flag_names",
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "time format used in oozie coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "nominal_time_format"
          },
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "delay in hours for waiting on input success flag",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "scheduling_delay",
            "hideOnUI": false,
            "name": "SCHEDULING_DELAY_HOLDER"
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": true,
            "description": "frequency of scheduled instance (in minutes)",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "frequency",
            "hideOnUI": false,
            "name": "frequency_in_minutes"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesWarning",
            "alertUIShow": "true",
            "alertLabel": "Misses Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesCritical",
            "alertUIShow": "true",
            "alertLabel": "Misses Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorWarning",
            "alertUIShow": "true",
            "alertLabel": "Error Warning",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorCritical",
            "alertUIShow": "true",
            "alertLabel": "Error Critical",
            "alertPriority": 4
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "extra_configurations": [
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "5G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ]
      }
    },
    {
      "type": "MLTrainingEdge",
      "properties": {
        "general": [
          {
            "field_options": [
              "catboost-classifier",
              "lightgbm-classifier",
              "xgboost-classifier"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "catboost-classifier",
            "editable": true,
            "required": false,
            "description": "The ml model to be used for training",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ml_model"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated list of the numerical features to be used for training (E.g. - visibility,viewability,ictr)",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "numerical_feature_columns"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated list of the categorical features to be used for training (E.g. - ad_adgroup_id,ad_campaign_id,ad_advertiser_id)",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "catboost-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "lightgbm-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "categorical_feature_columns"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated list of the text features to be used for training (E.g. - visibility,viewability,ictr)",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "catboost-classifier",
              "argument": {
                "field_options": [
                  "catboost-classifier",
                  "lightgbm-classifier",
                  "xgboost-classifier"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "catboost-classifier",
                "editable": true,
                "required": false,
                "description": "The ml model to be used for training",
                "category": "general",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ml_model"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "text_feature_columns"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated list of features (with their type) present in train, validation or test data. (E.g. - feature1:categorical,feature2:numerical,feature3:text)",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "AND",
              "argumentConditions": [
                {
                  "operation": "OR",
                  "argumentConditions": [
                    {
                      "comparator": "EQUALS",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the categorical features to be used for training (E.g. - ad_adgroup_id,ad_campaign_id,ad_advertiser_id)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "argumentCondition": {
                          "operation": "OR",
                          "argumentConditions": [
                            {
                              "comparator": "EQUALS",
                              "value": "catboost-classifier",
                              "argument": {
                                "field_options": [
                                  "catboost-classifier",
                                  "lightgbm-classifier",
                                  "xgboost-classifier"
                                ],
                                "isMultiple": false,
                                "field_type": "LIST",
                                "default": "catboost-classifier",
                                "editable": true,
                                "required": false,
                                "description": "The ml model to be used for training",
                                "category": "general",
                                "unique": false,
                                "advanced": false,
                                "appKillNeeded": true,
                                "hideOnUI": false
                              },
                              "action": "HIDE"
                            },
                            {
                              "comparator": "EQUALS",
                              "value": "lightgbm-classifier",
                              "argument": {
                                "field_options": [
                                  "catboost-classifier",
                                  "lightgbm-classifier",
                                  "xgboost-classifier"
                                ],
                                "isMultiple": false,
                                "field_type": "LIST",
                                "default": "catboost-classifier",
                                "editable": true,
                                "required": false,
                                "description": "The ml model to be used for training",
                                "category": "general",
                                "unique": false,
                                "advanced": false,
                                "appKillNeeded": true,
                                "hideOnUI": false
                              },
                              "action": "HIDE"
                            }
                          ],
                          "action": "HIDE"
                        },
                        "hideOnUI": false,
                        "name": "categorical_feature_columns"
                      },
                      "action": "HIDE"
                    },
                    {
                      "comparator": "EQUALS",
                      "value": "",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the categorical features to be used for training (E.g. - ad_adgroup_id,ad_campaign_id,ad_advertiser_id)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "argumentCondition": {
                          "operation": "OR",
                          "argumentConditions": [
                            {
                              "comparator": "EQUALS",
                              "value": "catboost-classifier",
                              "argument": {
                                "field_options": [
                                  "catboost-classifier",
                                  "lightgbm-classifier",
                                  "xgboost-classifier"
                                ],
                                "isMultiple": false,
                                "field_type": "LIST",
                                "default": "catboost-classifier",
                                "editable": true,
                                "required": false,
                                "description": "The ml model to be used for training",
                                "category": "general",
                                "unique": false,
                                "advanced": false,
                                "appKillNeeded": true,
                                "hideOnUI": false
                              },
                              "action": "HIDE"
                            },
                            {
                              "comparator": "EQUALS",
                              "value": "lightgbm-classifier",
                              "argument": {
                                "field_options": [
                                  "catboost-classifier",
                                  "lightgbm-classifier",
                                  "xgboost-classifier"
                                ],
                                "isMultiple": false,
                                "field_type": "LIST",
                                "default": "catboost-classifier",
                                "editable": true,
                                "required": false,
                                "description": "The ml model to be used for training",
                                "category": "general",
                                "unique": false,
                                "advanced": false,
                                "appKillNeeded": true,
                                "hideOnUI": false
                              },
                              "action": "HIDE"
                            }
                          ],
                          "action": "HIDE"
                        },
                        "hideOnUI": false,
                        "name": "categorical_feature_columns"
                      },
                      "action": "HIDE"
                    }
                  ],
                  "action": "HIDE"
                },
                {
                  "operation": "OR",
                  "argumentConditions": [
                    {
                      "comparator": "EQUALS",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the numerical features to be used for training (E.g. - visibility,viewability,ictr)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "hideOnUI": false,
                        "name": "numerical_feature_columns"
                      },
                      "action": "HIDE"
                    },
                    {
                      "comparator": "EQUALS",
                      "value": "",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the numerical features to be used for training (E.g. - visibility,viewability,ictr)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "hideOnUI": false,
                        "name": "numerical_feature_columns"
                      },
                      "action": "HIDE"
                    }
                  ],
                  "action": "HIDE"
                },
                {
                  "operation": "OR",
                  "argumentConditions": [
                    {
                      "comparator": "EQUALS",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the text features to be used for training (E.g. - visibility,viewability,ictr)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "argumentCondition": {
                          "comparator": "EQUALS",
                          "value": "catboost-classifier",
                          "argument": {
                            "field_options": [
                              "catboost-classifier",
                              "lightgbm-classifier",
                              "xgboost-classifier"
                            ],
                            "isMultiple": false,
                            "field_type": "LIST",
                            "default": "catboost-classifier",
                            "editable": true,
                            "required": false,
                            "description": "The ml model to be used for training",
                            "category": "general",
                            "unique": false,
                            "advanced": false,
                            "appKillNeeded": true,
                            "hideOnUI": false
                          },
                          "action": "HIDE"
                        },
                        "hideOnUI": false,
                        "name": "text_feature_columns"
                      },
                      "action": "HIDE"
                    },
                    {
                      "comparator": "EQUALS",
                      "value": "",
                      "argument": {
                        "field_type": "TEXT",
                        "default": "",
                        "editable": true,
                        "required": false,
                        "description": "Comma separated list of the text features to be used for training (E.g. - visibility,viewability,ictr)",
                        "category": "general",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "argumentCondition": {
                          "comparator": "EQUALS",
                          "value": "catboost-classifier",
                          "argument": {
                            "field_options": [
                              "catboost-classifier",
                              "lightgbm-classifier",
                              "xgboost-classifier"
                            ],
                            "isMultiple": false,
                            "field_type": "LIST",
                            "default": "catboost-classifier",
                            "editable": true,
                            "required": false,
                            "description": "The ml model to be used for training",
                            "category": "general",
                            "unique": false,
                            "advanced": false,
                            "appKillNeeded": true,
                            "hideOnUI": false
                          },
                          "action": "HIDE"
                        },
                        "hideOnUI": false,
                        "name": "text_feature_columns"
                      },
                      "action": "HIDE"
                    }
                  ],
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "feature_columns"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated list of packages and python version you want to use. (E.g. - python:3.9 , lightgbm:3.2.1 , numpy : >=1.2) OR (E.g. - lightgbm : 3.2.1 , numpy:1.2). It there is no python version specified in the list, we will use python 3.9 for custom environment by default. Leave this empty if you want to use nix default environment.",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "catboost-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "lightgbm-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "xgboost-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "custom_environment"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": true,
            "description": "The label column",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "catboost-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "lightgbm-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "xgboost-classifier",
                  "argument": {
                    "field_options": [
                      "catboost-classifier",
                      "lightgbm-classifier",
                      "xgboost-classifier"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "catboost-classifier",
                    "editable": true,
                    "required": false,
                    "description": "The ml model to be used for training",
                    "category": "general",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ml_model"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "label_column"
          },
          {
            "field_options": [
              "parquet",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "The format in which data exists in input directory",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_data_format"
          },
          {
            "field_options": [
              "cbm",
              "txt",
              "bin"
            ],
            "argumentConditionForFieldOptions": {
              "txt": {
                "comparator": "EQUALS",
                "value": "lightgbm-classifier",
                "argument": {
                  "field_options": [
                    "catboost-classifier",
                    "lightgbm-classifier",
                    "xgboost-classifier"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "catboost-classifier",
                  "editable": true,
                  "required": false,
                  "description": "The ml model to be used for training",
                  "category": "general",
                  "unique": false,
                  "advanced": false,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "ml_model"
                },
                "action": "HIDE"
              },
              "bin": {
                "comparator": "EQUALS",
                "value": "xgboost-classifier",
                "argument": {
                  "field_options": [
                    "catboost-classifier",
                    "lightgbm-classifier",
                    "xgboost-classifier"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "catboost-classifier",
                  "editable": true,
                  "required": false,
                  "description": "The ml model to be used for training",
                  "category": "general",
                  "unique": false,
                  "advanced": false,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "ml_model"
                },
                "action": "HIDE"
              },
              "cbm": {
                "comparator": "EQUALS",
                "value": "catboost-classifier",
                "argument": {
                  "field_options": [
                    "catboost-classifier",
                    "lightgbm-classifier",
                    "xgboost-classifier"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "catboost-classifier",
                  "editable": true,
                  "required": false,
                  "description": "The ml model to be used for training",
                  "category": "general",
                  "unique": false,
                  "advanced": false,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "ml_model"
                },
                "action": "HIDE"
              }
            },
            "isMultiple": false,
            "field_type": "LIST",
            "default": "cbm",
            "editable": true,
            "required": false,
            "description": "The file format of the output model file",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_model_file_format"
          },
          {
            "field_type": "TEXT",
            "default": "/prod_code/Flow-ML-Edge/master/ml_training_edge/bin/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "run_script_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Config json path to push metrics to prometheus push gateway, this json will contain gateway credentials and schema for metrics which users want to push. Key and values of this json will be used by python's push_to_gateway class of prometheus-client pkg.Example json :- {\n            \"gateway\": \"pushgateway.media.net\",\n            \"job\": \"c8-cron\",\n            \"grouping_key\": {\"learner_id\": 800},\n            \"username\": \"jhon\",\n            \"password\": \"jhon@123\",\n            \"metrics\": [\n                {\n                    \"ml_edge_metric_name\": \"test_metrics_json.logloss\",\n                    \"prometheus_metric_name\": \"final_logloss\",\n                    \"documentation\": \"Final logloss of a trained model\"\n                },\n               {\n                    \"ml_edge_metric_name\": \"runtime_metrics_json.training_time\",\n                    \"prometheus_metric_name\": \"training_time\",\n                    \"documentation\": \"Time taken to train a model\"\n                }\n            ]\n}",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "prometheus_push_gateway_config_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated Input columns to fetch from source data.",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_data_columns"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Whether to turn on prediction for the model or not",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "predict_metrices"
          }
        ],
        "dask_configuration": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "Dask partitioning config, user can provide two type of configs here, npartitions or partition_size (E.g. - npartitions = 10 or partition_size = 2048MB ).",
            "category": "dask_configuration",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "dask-distributed-beta",
              "argument": {
                "field_options": [
                  "single-node",
                  "dask-distributed-beta",
                  "spark-distributed-beta"
                ],
                "argumentConditionForFieldOptions": {
                  "dask-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "single-node": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "spark-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  }
                },
                "isMultiple": false,
                "field_type": "LIST",
                "default": "single-node",
                "editable": true,
                "required": false,
                "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                "category": "resource",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "training_type"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "dask_partition_conf"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "Comma separated list of dask configs. Refer to this page for more info https://docs.dask.org/en/latest/configuration.html (E.g. - distributed.comm.timeouts.connect = 30s, distributed.scheduler.validate = false ).",
            "category": "dask_configuration",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "dask-distributed-beta",
              "argument": {
                "field_options": [
                  "single-node",
                  "dask-distributed-beta",
                  "spark-distributed-beta"
                ],
                "argumentConditionForFieldOptions": {
                  "dask-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "single-node": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "spark-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  }
                },
                "isMultiple": false,
                "field_type": "LIST",
                "default": "single-node",
                "editable": true,
                "required": false,
                "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                "category": "resource",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "training_type"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "dask_conf"
          }
        ],
        "preprocessing": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Comma separated zip python modules path which will be used in custom preprocessing function.",
            "category": "preprocessing",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "modules_hdfs_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Custom preprocessing hdfs .py file",
            "category": "preprocessing",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "custom_preprocessing_file_hdfs_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Name of entry function that will be used from custom preprocessing .py file",
            "category": "preprocessing",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "entry_function_name"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Dictionary of extra kwargs in string format that will be passed to custom preprocessing entry function.",
            "category": "preprocessing",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "entry_function_kwargs"
          }
        ],
        "hyperparameters": [
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Whether to perform hyperparameter optimization for the model or not",
            "category": "hyperparameters",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "optimize_hyperparameters"
          },
          {
            "field_type": "TEXT",
            "default": "100",
            "editable": true,
            "required": true,
            "category": "hyperparameters",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "number_of_trials"
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": true,
            "description": "The number of models to train in parallel when performing hyperparameter optimization",
            "category": "hyperparameters",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "parallelism"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "A JSON containing the hyperparameters and their values to be used for training",
            "category": "hyperparameters",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "false",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "training_hyperaparameter_json"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "A JSON representing the hyperparameter search space for hyperparameter optimization",
            "category": "hyperparameters",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "hyperparameter_search_space"
          },
          {
            "field_type": "TEXT",
            "default": "604800",
            "editable": true,
            "required": true,
            "description": "Time in secs after which the hyperparameter optimization process times out. Max value can not be more than the frequency of hyperparameter optimization scheduler",
            "category": "hyperparameters",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "timeout"
          },
          {
            "field_options": [
              "None",
              "No Progress In Loss"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Enable early stopping of the hyperparameter optimization, based on certain criteria - i) No Progress In Loss - Stop hyperparameter optimization if there is no progress in loss over various subsequent trials",
            "category": "hyperparameters",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "early_stopping_criteria"
          },
          {
            "field_options": [
              "logloss",
              "auc",
              "precision",
              "recall"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "logloss",
            "editable": true,
            "required": false,
            "description": "Metric to track for no progress in loss",
            "category": "hyperparameters",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "No Progress In Loss",
              "argument": {
                "field_options": [
                  "None",
                  "No Progress In Loss"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "None",
                "editable": true,
                "required": false,
                "description": "Enable early stopping of the hyperparameter optimization, based on certain criteria - i) No Progress In Loss - Stop hyperparameter optimization if there is no progress in loss over various subsequent trials",
                "category": "hyperparameters",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "argumentCondition": {
                  "comparator": "EQUALS",
                  "value": "true",
                  "argument": {
                    "field_options": [
                      "true",
                      "false"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "true",
                    "editable": true,
                    "required": false,
                    "description": "Whether to perform hyperparameter optimization for the model or not",
                    "category": "hyperparameters",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false
                  },
                  "action": "HIDE"
                },
                "hideOnUI": false,
                "name": "early_stopping_criteria"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "no_loss_progress_metric"
          },
          {
            "field_type": "TEXT",
            "default": "10",
            "editable": true,
            "required": false,
            "description": "Number of subsequent trials with no improvement in loss, after which the hyperparameter optimization should be stopped",
            "category": "hyperparameters",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "No Progress In Loss",
              "argument": {
                "field_options": [
                  "None",
                  "No Progress In Loss"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "None",
                "editable": true,
                "required": false,
                "description": "Enable early stopping of the hyperparameter optimization, based on certain criteria - i) No Progress In Loss - Stop hyperparameter optimization if there is no progress in loss over various subsequent trials",
                "category": "hyperparameters",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "argumentCondition": {
                  "comparator": "EQUALS",
                  "value": "true",
                  "argument": {
                    "field_options": [
                      "true",
                      "false"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "true",
                    "editable": true,
                    "required": false,
                    "description": "Whether to perform hyperparameter optimization for the model or not",
                    "category": "hyperparameters",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false
                  },
                  "action": "HIDE"
                },
                "hideOnUI": false,
                "name": "early_stopping_criteria"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "no_loss_progress_trials"
          }
        ],
        "training_scheduler": [
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_options": [
              "daily",
              "hourly",
              "weekly"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "hourly",
            "editable": true,
            "required": false,
            "description": "frequency of the model training coordinator",
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "batch_frequency"
          },
          {
            "field_options": [
              "FIFO",
              "LIFO",
              "LAST_ONLY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "FIFO",
            "editable": true,
            "required": false,
            "description": "Execution mode of the model training coordinator",
            "category": "training_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "execution_mode"
          },
          {
            "field_type": "TEXT",
            "default": "2880",
            "editable": true,
            "required": false,
            "description": "Timeout of the training coordinator",
            "category": "training_scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "timeout_ts"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Throttle of the training coordinator",
            "category": "training_scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "throttle_ts"
          }
        ],
        "hyperparamopt_scheduler": [
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "start_date_ho"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "start_time_ho"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "end_date_ho"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "end_time_ho"
          },
          {
            "field_options": [
              "daily",
              "weekly",
              "30 days"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "weekly",
            "editable": true,
            "required": false,
            "description": "frequency of the hyperparameter tuning coordinator",
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "true",
                  "false"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "true",
                "editable": true,
                "required": false,
                "description": "Whether to perform hyperparameter optimization for the model or not",
                "category": "hyperparameters",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "optimize_hyperparameters"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "batch_frequency_ho"
          },
          {
            "field_options": [
              "FIFO",
              "LIFO",
              "LAST_ONLY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "FIFO",
            "editable": true,
            "required": false,
            "description": "Execution mode of the hyperparameter tuning coordinator",
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "execution_mode_ho"
          },
          {
            "field_type": "TEXT",
            "default": "2880",
            "editable": true,
            "required": false,
            "description": "Timeout of the hyperparameter tuning coordinator",
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "timeout_ho"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Throttle of the hyperparameter tuning coordinator",
            "category": "hyperparamopt_scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "throttle_ho"
          }
        ],
        "resource": [
          {
            "field_options": [
              "single-node",
              "dask-distributed-beta",
              "spark-distributed-beta"
            ],
            "argumentConditionForFieldOptions": {
              "dask-distributed-beta": {
                "operation": "OR",
                "argumentConditions": [
                  {
                    "comparator": "EQUALS",
                    "value": "lightgbm-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  },
                  {
                    "comparator": "EQUALS",
                    "value": "xgboost-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  }
                ],
                "action": "HIDE"
              },
              "single-node": {
                "operation": "OR",
                "argumentConditions": [
                  {
                    "comparator": "EQUALS",
                    "value": "catboost-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  },
                  {
                    "comparator": "EQUALS",
                    "value": "lightgbm-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  },
                  {
                    "comparator": "EQUALS",
                    "value": "xgboost-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  }
                ],
                "action": "HIDE"
              },
              "spark-distributed-beta": {
                "operation": "OR",
                "argumentConditions": [
                  {
                    "comparator": "EQUALS",
                    "value": "catboost-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  },
                  {
                    "comparator": "EQUALS",
                    "value": "lightgbm-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  },
                  {
                    "comparator": "EQUALS",
                    "value": "xgboost-classifier",
                    "argument": {
                      "field_options": [
                        "catboost-classifier",
                        "lightgbm-classifier",
                        "xgboost-classifier"
                      ],
                      "isMultiple": false,
                      "field_type": "LIST",
                      "default": "catboost-classifier",
                      "editable": true,
                      "required": false,
                      "description": "The ml model to be used for training",
                      "category": "general",
                      "unique": false,
                      "advanced": false,
                      "appKillNeeded": true,
                      "hideOnUI": false,
                      "name": "ml_model"
                    },
                    "action": "HIDE"
                  }
                ],
                "action": "HIDE"
              }
            },
            "isMultiple": false,
            "field_type": "LIST",
            "default": "single-node",
            "editable": true,
            "required": false,
            "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "training_type"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": true,
            "description": "The number of dask workers. Please ensure that the number of dask workers is less than the number of data partitions, to ensure that no workers have 0 data rows during training",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "dask-distributed-beta",
              "argument": {
                "field_options": [
                  "single-node",
                  "dask-distributed-beta",
                  "spark-distributed-beta"
                ],
                "argumentConditionForFieldOptions": {
                  "dask-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "single-node": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "spark-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  }
                },
                "isMultiple": false,
                "field_type": "LIST",
                "default": "single-node",
                "editable": true,
                "required": false,
                "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                "category": "resource",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "training_type"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "dask_workers_count"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": true,
            "description": "The number of spark executors to be used for distributed training. Please ensure that the number of executors is less than the number of data partitions, to ensure that no executors have 0 data partitions during training",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "spark-distributed-beta",
              "argument": {
                "field_options": [
                  "single-node",
                  "dask-distributed-beta",
                  "spark-distributed-beta"
                ],
                "argumentConditionForFieldOptions": {
                  "dask-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "single-node": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  },
                  "spark-distributed-beta": {
                    "operation": "OR",
                    "argumentConditions": [
                      {
                        "comparator": "EQUALS",
                        "value": "catboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "lightgbm-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      },
                      {
                        "comparator": "EQUALS",
                        "value": "xgboost-classifier",
                        "argument": {
                          "field_options": [
                            "catboost-classifier",
                            "lightgbm-classifier",
                            "xgboost-classifier"
                          ],
                          "isMultiple": false,
                          "field_type": "LIST",
                          "default": "catboost-classifier",
                          "editable": true,
                          "required": false,
                          "description": "The ml model to be used for training",
                          "category": "general",
                          "unique": false,
                          "advanced": false,
                          "appKillNeeded": true,
                          "hideOnUI": false
                        },
                        "action": "HIDE"
                      }
                    ],
                    "action": "HIDE"
                  }
                },
                "isMultiple": false,
                "field_type": "LIST",
                "default": "single-node",
                "editable": true,
                "required": false,
                "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                "category": "resource",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "training_type"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "executors_count"
          },
          {
            "field_type": "TEXT",
            "default": "1g",
            "editable": true,
            "required": true,
            "description": "The memory allocated to a worker in distributed training",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "dask-distributed-beta",
                  "argument": {
                    "field_options": [
                      "single-node",
                      "dask-distributed-beta",
                      "spark-distributed-beta"
                    ],
                    "argumentConditionForFieldOptions": {
                      "dask-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "single-node": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "spark-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      }
                    },
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "single-node",
                    "editable": true,
                    "required": false,
                    "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                    "category": "resource",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "training_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "spark-distributed-beta",
                  "argument": {
                    "field_options": [
                      "single-node",
                      "dask-distributed-beta",
                      "spark-distributed-beta"
                    ],
                    "argumentConditionForFieldOptions": {
                      "dask-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "single-node": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "spark-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      }
                    },
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "single-node",
                    "editable": true,
                    "required": false,
                    "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                    "category": "resource",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "training_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "memory"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": true,
            "description": "The number of cores allocated to a worker in distributed training",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "dask-distributed-beta",
                  "argument": {
                    "field_options": [
                      "single-node",
                      "dask-distributed-beta",
                      "spark-distributed-beta"
                    ],
                    "argumentConditionForFieldOptions": {
                      "dask-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "single-node": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "spark-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      }
                    },
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "single-node",
                    "editable": true,
                    "required": false,
                    "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                    "category": "resource",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "training_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "spark-distributed-beta",
                  "argument": {
                    "field_options": [
                      "single-node",
                      "dask-distributed-beta",
                      "spark-distributed-beta"
                    ],
                    "argumentConditionForFieldOptions": {
                      "dask-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "single-node": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      },
                      "spark-distributed-beta": {
                        "operation": "OR",
                        "argumentConditions": [
                          {
                            "comparator": "EQUALS",
                            "value": "catboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "lightgbm-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          },
                          {
                            "comparator": "EQUALS",
                            "value": "xgboost-classifier",
                            "argument": {
                              "field_options": [
                                "catboost-classifier",
                                "lightgbm-classifier",
                                "xgboost-classifier"
                              ],
                              "isMultiple": false,
                              "field_type": "LIST",
                              "default": "catboost-classifier",
                              "editable": true,
                              "required": false,
                              "description": "The ml model to be used for training",
                              "category": "general",
                              "unique": false,
                              "advanced": false,
                              "appKillNeeded": true,
                              "hideOnUI": false
                            },
                            "action": "HIDE"
                          }
                        ],
                        "action": "HIDE"
                      }
                    },
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "single-node",
                    "editable": true,
                    "required": false,
                    "description": "<p>\n    The type of training to perform - single node / distributed.\n    <br/>\n    Recommendations for selecting the appropriate training_type for each model -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit#bookmark=id.sv5yh1fmiqqj\">\n        here\n    </a>\n    <br/>\n    User guide on distributed training & assocaited properties -\n    <a target=\"_blank\" href=\"https://docs.google.com/document/d/1EusS7ENYIOwbEWBaI89EIbfYSylwIxbboLDfLL_tqH8/edit?usp=sharing\">\n        here\n    </a>\n    <br/> <br/>\n    <b>Note - Hyperparameter tuning is not supported for any type of distributed training (dask/spark)</b>\n</p>",
                    "category": "resource",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "training_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "cores"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": true,
            "description": "Cores required for training the model (in single-node training), or allocated to the master/driver process in case of distributed training, this will be required for tasks like computing test metrics, by collecting predictions & test data labels to the master process",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_cores"
          },
          {
            "field_type": "TEXT",
            "default": "1g",
            "editable": true,
            "required": true,
            "description": "Memory required for training the model (Eg. 10g) in single-node training or Memory allocated to the master/driver process in case of distributed training, this will be required for tasks like computing test metrics, by collecting predictions & test data labels to the master process",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "spark-live-py3",
              "adc-data-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "spark-live-py3",
            "editable": true,
            "required": false,
            "description": "The cluster name where the edge will run",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "output_gcs": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "The project Id of the google project to which the bucket belongs",
            "category": "output_gcs",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "gcp_project_id"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "Path (including the bucket name), where the model file is to be dumped. e,g,- gs://bucket-123/sample_data/ml_models/",
            "category": "output_gcs",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "gcs_path"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "description": "The name of the column with which time partition folders will be created for storing model files. E.g.- ml_models/ts=2021020314/ , ml_models/ts=2022040717",
            "category": "output_gcs",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "gcs_partition_column"
          }
        ],
        "model_configuration": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "model_configuration",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "lightgbm-classifier",
              "argument": {
                "field_options": [
                  "catboost-classifier",
                  "lightgbm-classifier",
                  "xgboost-classifier"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "catboost-classifier",
                "editable": true,
                "required": false,
                "description": "The ml model to be used for training",
                "category": "general",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ml_model"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "init_score_columns"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "The column in dataset containing sample weights for the input rows",
            "category": "model_configuration",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "sample_weight_column"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "The column contains baseline values for the input. The training starts from these values for all input objects instead of starting from a default initial value like 0",
            "category": "model_configuration",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "catboost-classifier",
              "argument": {
                "field_options": [
                  "catboost-classifier",
                  "lightgbm-classifier",
                  "xgboost-classifier"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "catboost-classifier",
                "editable": true,
                "required": false,
                "description": "The ml model to be used for training",
                "category": "general",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ml_model"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "default": "",
            "name": "baseline_column"
          }
        ],
        "health_thresholds": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          }
        ]
      }
    },
    {
      "type": "AggregateBatchEdge",
      "properties": {
        "aggregation": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated column names to group by upon",
            "category": "aggregation",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "groupBy_cols"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated expressions to perform aggregate, e.g. count(view_id) as cnt",
            "category": "aggregation",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "aggregate_exprs"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/AggregateBatchEdge/run.sh",
            "editable": true,
            "required": false,
            "description": "the hdfs path to the run.sh script for execution",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "run_script_path"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of input partitions to be considered at once",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "input_splits",
            "hideOnUI": false,
            "name": "splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "the count of output partitions to utilize in case of repartitioning",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "json",
            "editable": true,
            "required": false,
            "description": "format in which data is present within the input directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_data_format"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "required format for writing data in the output directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_data_format"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "partition column format in input data",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_partition_column_format"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "description": "partition column of input source if any",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_partition_column"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "description": "partition column of output source if any",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_partition_column"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "partition column format in output data",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_partition_column_format"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ],
        "scheduler": [
          {
            "field_options": [
              "Oozie",
              "Airflow"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "editable": true,
            "required": false,
            "description": "choose a scheduler framework for orchestrating batch job scheduling",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduler_service"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "start date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "start time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "end date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "end time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "refers to the number of instances that will run simultaneously in parallel",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "concurrency"
          },
          {
            "field_type": "TEXT",
            "default": "1440",
            "editable": true,
            "required": false,
            "description": "the maximum time in minutes which an action will wait in waiting or ready state before going to timed-out state, put -1 if never timed-out ",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "timeout"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "number of retries for a failed task",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "retries",
            "hideOnUI": false,
            "name": "RETRIES_HOLDER"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "when true, ingestion will only start once success file is available at input data location",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_path_wait",
            "hideOnUI": false,
            "name": "wait_on_input_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated success flag locations to wait (partition must be Included) Eg. home/path/ts=",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "dependent_flags_locations",
            "hideOnUI": false,
            "name": "success_flag_locations"
          },
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "comma separated success flag names",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "dependent_flag_names",
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "time format used in oozie coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "nominal_time_format"
          },
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "delay in hours for waiting on input success flag",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "scheduling_delay",
            "hideOnUI": false,
            "name": "SCHEDULING_DELAY_HOLDER"
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": true,
            "description": "frequency of scheduled instance (in minutes)",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "frequency",
            "hideOnUI": false,
            "name": "frequency_in_minutes"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesWarning",
            "alertUIShow": "true",
            "alertLabel": "Misses Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesCritical",
            "alertUIShow": "true",
            "alertLabel": "Misses Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorWarning",
            "alertUIShow": "true",
            "alertLabel": "Error Warning",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorCritical",
            "alertUIShow": "true",
            "alertLabel": "Error Critical",
            "alertPriority": 4
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "extra_configurations": [
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "5G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ]
      }
    },
    {
      "type": "DruidNativeEdge",
      "properties": {
        "ingestion_type": [
          {
            "field_options": [
              "index",
              "index_parallel"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "index",
            "editable": true,
            "required": false,
            "description": "Partitions Spec type. Payload Template to be selected based on value selected.",
            "category": "ingestion_type",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ingestion_type"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Number of shards in a segment i.e. number of reducer tasks or the number of output files in as segment",
            "category": "resource",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "num_shards"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "input_spec": [
          {
            "field_type": "TEXT",
            "default": "auto",
            "editable": true,
            "required": false,
            "description": "timestamp format provided in timeStampSpec",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ts_spec_format"
          },
          {
            "field_type": "TEXT",
            "default": "256MiB",
            "editable": true,
            "required": false,
            "description": "maximum split size",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_split_size"
          },
          {
            "field_options": [
              "dynamic",
              "hashed"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "hashed",
            "editable": true,
            "required": false,
            "description": "hashed partitions for better query performance, opt dynamic for faster ingestion & frequent data overwriting",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "partition_type"
          },
          {
            "field_type": "TEXT",
            "default": "5000000",
            "editable": true,
            "required": false,
            "description": "the maximum number of rows allowed within a single segment of data",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_rows_per_segment"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "the number of concurrent worker tasks that run in parallel",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "maxNumConcurrentSubTasks"
          },
          {
            "field_options": [
              "yyyy-MM-dd HH:mm:ss",
              "yyyyMMddHH",
              "yyyyMMdd",
              "yyyy-MM-dd",
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "yyyy-MM-dd'T'HH:mm:ss",
              "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
              "yyyy-MM-dd HH:mm:ss.SSS",
              "auto"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "yyyy-MM-dd HH:mm:ss",
            "editable": true,
            "required": false,
            "description": "Format of the timestamp in the input data",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "time_stamp_format"
          },
          {
            "field_type": "TEXT",
            "default": "time_stamp",
            "editable": true,
            "required": false,
            "description": "refers to a column in source data that contains time-based data and is used for optimizing druid queries",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "time_stamp_column",
            "hideOnUI": false,
            "name": "column"
          },
          {
            "field_options": [
              "HOUR",
              "MINUTE",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "HOUR",
            "editable": true,
            "required": false,
            "description": "Multiple segments can be created per time chunk. For example, when set to day, the events of the same day fall into the same time chunk",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "segment_granularity"
          },
          {
            "field_options": [
              "MINUTE",
              "HOUR",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "MINUTE",
            "editable": true,
            "required": false,
            "description": "Finest granularity that you can query at and still receive sensible results, note that you can still query at anything coarser than this granularity",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "query_granularity"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "Format type for parsing timestamp values during data ingestion",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "parser_spec_format_type"
          },
          {
            "field_type": "TEXT",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Whether to use ingestion-time rollup or not. Note that rollup is still effective even when queryGranularity is set to none. Your data will be rolled up if they have the exactly same timestamp.",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rollup"
          },
          {
            "field_type": "TEXT",
            "default": "500000",
            "editable": true,
            "required": false,
            "description": "The maximum number of records to store in memory before persisting to disk",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_rows_in_memory"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "used during data ingestion to perform transformations on the data fields before they are ingested into Druid",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "transform_spec"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated dimensions in decreasing order of priority",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dimensions_priority"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "provide the json value for context",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "context"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Specify comma separated properties in json format. Example: spec->tuningConfig->jobProperties->mapreduce.map.memory.mb:9500",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties"
          },
          {
            "field_type": "TEXT",
            "default": ",_->_:",
            "editable": true,
            "required": false,
            "description": "Specify _ separated delimiter for extra properties. Default: \",\" as separator, \"->\" as key level and \":\" for value level. Note \"_\" can't be used as any separator/delimiter.",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties_delimiters"
          }
        ],
        "scheduler": [
          {
            "field_options": [
              "Oozie",
              "Airflow"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Choose scheduler to run your application through (\"Airflow or Oozie\")",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduler_service"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "start date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "start time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "end date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "end time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": true,
            "description": "frequency of coordinator (in Minutes) ",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "units": "minutes",
            "name": "frequency"
          },
          {
            "field_options": [
              "NA",
              "hourly",
              "daily"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "NA",
            "editable": true,
            "required": false,
            "description": "NA is not applicable, it means based on the frequency we will decide,if frequency is 1440 then daily otherwise hourly, if you want to change this behaviour, choose daily or hourly",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_flag_granularity",
            "hideOnUI": false,
            "name": "input_success_flag_granularity"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "concurrency means how many instances will run in parallel ",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "concurrency",
            "hideOnUI": false,
            "name": "concurrency_level"
          },
          {
            "field_type": "TEXT",
            "default": "1440",
            "editable": true,
            "required": false,
            "description": "The maximum time in minutes which an action will wait in ready or waiting state before going to timed-out state. Put -1 if never timed-out",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "units": "minutes",
            "name": "timeout"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "number of retries for a failed task",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "retries"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "When true, Ingestion will only start once success file is available at input data location",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_path_wait",
            "hideOnUI": false,
            "name": "wait_on_input_path_success_flag"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "If ingestion relies on a path other than the input path, specify comma-separated locations",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dependent_flags_locations"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "If ingestion depends on a flag other than the default _success flag, list comma-separated flags",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dependent_flag_names"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "used to determine dependencies & conditions based on time. For eg. run workflow every day at 3:00 PM or run action every hour",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "nominal_time_format"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Number of hours data to ingest in one batch, For Negative value interval is calculated to ingest historical data",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "batch_interval",
            "hideOnUI": false,
            "units": "hours",
            "name": "interval"
          },
          {
            "field_type": "TEXT",
            "default": "12",
            "editable": true,
            "required": true,
            "description": "Throttling helps control the rate at which data is processed",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "throttle"
          }
        ],
        "ingestion_conditions": [
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "create_success_file"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "batch ingestion begins only when real-time ingestion is inconsistent",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "data_consistency",
            "hideOnUI": false,
            "name": "check_real_time"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to processed which failed (not waiting for success flag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to processed which failed (not waiting for success flag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesWarning",
            "alertUIShow": "true",
            "alertLabel": "Misses Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesCritical",
            "alertUIShow": "true",
            "alertLabel": "Misses Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorWarning",
            "alertUIShow": "true",
            "alertLabel": "Error Warning",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorCritical",
            "alertUIShow": "true",
            "alertLabel": "Error Critical",
            "alertPriority": 4
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ]
      }
    },
    {
      "type": "StreamEdge",
      "properties": {
        "sink": [
          {
            "field_type": "TEXT",
            "default": "633554432",
            "editable": true,
            "required": false,
            "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
            "category": "sink",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "buffer_memory"
          },
          {
            "field_type": "TEXT",
            "default": "500",
            "editable": true,
            "required": false,
            "description": "the upper bound on the delay for batching by producer",
            "category": "sink",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "linger_ms"
          },
          {
            "field_type": "TEXT",
            "default": "80384",
            "editable": true,
            "required": false,
            "description": "the upper bound on the size of batch",
            "category": "sink",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "batch_size"
          },
          {
            "field_options": [
              "kafka",
              "elasticsearch"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "kafka",
            "editable": true,
            "required": false,
            "description": "Select Sink Format based on Sink Type",
            "category": "sink",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "sink_format"
          }
        ],
        "source": [
          {
            "field_type": "TEXT",
            "default": "20000",
            "editable": true,
            "required": false,
            "description": "Backoff time to wait before trying to determine the leader of a partition that has just lost its leader",
            "category": "source",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "refresh_leader_backoff_ms"
          }
        ],
        "ETL_Properties": [
          {
            "field_options": [
              "SimpleStreamJob",
              "SimpleExpandStreamJob",
              "StreamingJob"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "SimpleStreamJob",
            "editable": true,
            "required": false,
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_job_class"
          },
          {
            "field_type": "TEXT",
            "default": "15",
            "editable": true,
            "required": true,
            "description": "duration of micro batch in streaming",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "batch_duration_sec"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": true,
            "description": "max offsets to process per task",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "offsets_per_task"
          },
          {
            "field_options": [
              "false",
              "true"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "whether exactly once delivery is expected or not",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_exactly_once"
          },
          {
            "field_type": "TEXT",
            "default": "10000",
            "editable": true,
            "required": true,
            "description": "max offsets to process per micro batch",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_offsets_per_micro_batch"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": true,
            "description": "number of partitions while applying ETL",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "splits"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "Warning threshold in Mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delay_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Delay Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "Critical threshold in Mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delay_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Delay Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "extra_configurations": [
          {
            "field_options": [
              "latest",
              "earliest",
              "timestamp"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "latest",
            "editable": true,
            "required": false,
            "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_from"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Used when start_from is set to timestamp. Should be in format yyyyMMddHH",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_timestamp"
          },
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "general": [
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/StreamEdge/spark240/new_run.sh",
            "editable": true,
            "required": true,
            "description": "run script path",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "8G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ]
      }
    },
    {
      "type": "StructStreamCamusEdge",
      "properties": {
        "general": [
          {
            "field_type": "TEXT",
            "default": "hdfs://nameservice1/prod_code/Data/master/config/hbase-site.xml",
            "editable": false,
            "required": true,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "HBASE_PATH"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_partitions_list"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of output partitions to use if repartitioning.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "input partitions",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "input_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "Approximate number of offsets/messages to process per task. If needed bigger tasks would be split, such that task size remains around this value.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "offsets_per_task"
          },
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/StructStreamCamusEdge/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "Success flag will be created by this name in the output directory",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_options": [
              "ds_column_schema",
              "fields_meta"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "fields_meta",
            "editable": true,
            "required": false,
            "description": "table to use for getting Schema details",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "schema_source"
          },
          {
            "field_type": "TEXT",
            "default": "struct_stream_camus",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "etl_rule_source"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "600",
            "editable": true,
            "required": false,
            "description": "stream micro batch duration in seconds",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "stream_batch_duration"
          },
          {
            "field_type": "TEXT",
            "default": "10000000",
            "editable": true,
            "required": false,
            "description": "Use maxOffsetsPerTrigger option to limit the number of records to fetch per trigger.",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "max_offsets_per_trigger"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "extra_configurations": [
          {
            "field_options": [
              "latest",
              "earliest",
              "timestamp",
              "offset"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "latest",
            "editable": true,
            "required": false,
            "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_from"
          },
          {
            "field_options": [
              "latest",
              "earliest",
              "failure"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "earliest",
            "editable": true,
            "required": false,
            "description": "",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "fallback_strategy"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "Starting Offsets for every partition in every topic, for example: {\"c8.ac_three_model\":{\"0\":2628557},\"c8.mn.acm.cm\":{\"2\":463136383,\"5\":463256156,\"4\":463285000,\"1\":463219667,\"3\":463129661,\"0\":463107949}}",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "inputFormat": "JSON",
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "offset",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "offset_json"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Used when start_from is set to timestamp. Should be in format yyyyMMddHH",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "start_timestamp"
          },
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "warning threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_warning",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "description": "critical threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_critical",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "500",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_executors"
          },
          {
            "field_type": "TEXT",
            "default": "2048",
            "editable": true,
            "required": false,
            "description": "max memory allowed per executor apart from heap",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "yarn_executor_memory_overhead"
          },
          {
            "field_type": "TEXT",
            "default": "3G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ]
      }
    },
    {
      "type": "BatchEdgeV2",
      "properties": {
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/BatchEdgeV2/spark240/run.sh",
            "editable": true,
            "required": false,
            "description": "provide the run-script path",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "run_script_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "When writing to bigquery, need to provide the gcs-temp bucket",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "gcs_temp_path"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Include additional filters when retrieving data from BigQuery",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "additionFilters"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of input partitions to be considered at once",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "input_splits",
            "hideOnUI": false,
            "name": "splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "the count of output partitions to utilize in case of repartitioning",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "json",
            "editable": true,
            "required": false,
            "description": "format in which data is present within the input directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_data_format"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "text",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "required format for writing data in the output directory",
            "category": "ingestion_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_data_format"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "partition column format in input data",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_partition_column_format"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "description": "partition column of input source if any",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_partition_column"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "description": "partition column of output source if any",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_partition_column"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "partition column format in output data",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_partition_column_format"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ],
        "scheduler": [
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "partition format of input path",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_path_partition_format"
          },
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "success flag name at input path",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_path_success_flag_name"
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "description": "cluster to use",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "clusterId"
          },
          {
            "field_options": [
              "Oozie",
              "Airflow"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "editable": true,
            "required": false,
            "description": "choose a scheduler framework for orchestrating batch job scheduling",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduler_service"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "start date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "start time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "end date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "end time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "refers to the number of instances that will run simultaneously in parallel",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "concurrency"
          },
          {
            "field_type": "TEXT",
            "default": "1440",
            "editable": true,
            "required": false,
            "description": "the maximum time in minutes which an action will wait in waiting or ready state before going to timed-out state, put -1 if never timed-out ",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "timeout"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "number of retries for a failed task",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "retries",
            "hideOnUI": false,
            "name": "RETRIES_HOLDER"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "when true, ingestion will only start once success file is available at input data location",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_path_wait",
            "hideOnUI": false,
            "name": "wait_on_input_path"
          },
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "comma separated success flag names",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "dependent_flag_names",
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "time format used in oozie coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "nominal_time_format"
          },
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "delay in hours for waiting on input success flag",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "scheduling_delay",
            "hideOnUI": false,
            "name": "SCHEDULING_DELAY_HOLDER"
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": true,
            "description": "frequency of scheduled instance (in minutes)",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "frequency",
            "hideOnUI": false,
            "name": "frequency_in_minutes"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to processed which failed (not waiting for successflag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesWarning",
            "alertUIShow": "true",
            "alertLabel": "Misses Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesCritical",
            "alertUIShow": "true",
            "alertLabel": "Misses Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorWarning",
            "alertUIShow": "true",
            "alertLabel": "Error Warning",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorCritical",
            "alertUIShow": "true",
            "alertLabel": "Error Critical",
            "alertPriority": 4
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "extra_configurations": [
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "5G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ]
      }
    },
    {
      "type": "DruidStreamEdge",
      "properties": {
        "io_config": [
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "number of replicas of task, this provides the resiliency against the failure of tasks",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "replicas"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "The maximum number of reading tasks in a replica set",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "task_count"
          },
          {
            "field_type": "TEXT",
            "default": "PT1800S",
            "editable": true,
            "required": false,
            "description": "The length of time to wait before declaring a publishing task as failed and terminating it. If this is set too low, your tasks may never publish",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "completion_timeout"
          },
          {
            "field_type": "TEXT",
            "default": "PT3600S",
            "editable": true,
            "required": false,
            "description": "Configure tasks to reject messages with timestamps earlier than this period before the task was created;",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "late_message_rejection_period"
          },
          {
            "field_type": "TEXT",
            "default": "PT3600S",
            "editable": true,
            "required": false,
            "description": "Configure tasks to reject messages with timestamps later than this period",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "early_message_rejection_period"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": false,
            "required": true,
            "description": "The upper limit on the number of tasks utilized during the process of auto-scaling.",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_task_count"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "Enable this option to trigger auto-scaling of tasks based on lag.",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_auto_scaling"
          },
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "io_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "graceful_shut_down_max_publishing_task_limit"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_graceful_shut_down"
          }
        ],
        "input_spec": [
          {
            "field_options": [
              "roaring",
              "concise"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "roaring",
            "editable": true,
            "required": false,
            "description": "compress columns values, use roaring for high cardinality columns, concise is slower in most cases",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "bit_map_type"
          },
          {
            "field_type": "TEXT",
            "default": "auto",
            "editable": true,
            "required": false,
            "description": "provide the time stamp column format present in input data",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "time_stamp_format"
          },
          {
            "field_type": "TEXT",
            "default": "1000000",
            "editable": true,
            "required": false,
            "description": "",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_rows_per_segment"
          },
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "Maximum number of pending persists that remain not started. See https://druid.apache.org/docs/latest/ingestion/native-batch.html#tuningconfig for more.",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_pending_persists"
          },
          {
            "field_type": "TEXT",
            "default": "time_stamp",
            "editable": true,
            "required": false,
            "description": "refers to a column in source data that contains time-based data and is used for optimizing druid queries",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "time_stamp_column",
            "hideOnUI": false,
            "name": "column"
          },
          {
            "field_options": [
              "HOUR",
              "MINUTE",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "HOUR",
            "editable": true,
            "required": false,
            "description": "Multiple segments can be created per time chunk. For example, when set to day, the events of the same day fall into the same time chunk",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "segment_granularity"
          },
          {
            "field_options": [
              "MINUTE",
              "HOUR",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "MINUTE",
            "editable": true,
            "required": false,
            "description": "Finest granularity that you can query at and still receive sensible results, note that you can still query at anything coarser than this granularity",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "query_granularity"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "Format type for parsing timestamp values during data ingestion",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "parser_spec_format_type"
          },
          {
            "field_type": "TEXT",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Whether to use ingestion-time rollup or not. Note that rollup is still effective even when queryGranularity is set to none. Your data will be rolled up if they have the exactly same timestamp.",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rollup"
          },
          {
            "field_type": "TEXT",
            "default": "500000",
            "editable": true,
            "required": false,
            "description": "The maximum number of records to store in memory before persisting to disk",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_rows_in_memory"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "used during data ingestion to perform transformations on the data fields before they are ingested into Druid",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "transform_spec"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated dimensions in decreasing order of priority",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dimensions_priority"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "provide the json value for context",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "context"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Specify comma separated properties in json format. Example: spec->tuningConfig->jobProperties->mapreduce.map.memory.mb:9500",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties"
          },
          {
            "field_type": "TEXT",
            "default": ",_->_:",
            "editable": true,
            "required": false,
            "description": "Specify _ separated delimiter for extra properties. Default: \",\" as separator, \"->\" as key level and \":\" for value level. Note \"_\" can't be used as any separator/delimiter.",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties_delimiters"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "100000",
            "editable": true,
            "required": false,
            "description": "threshold for alert on aggregated lag in offsets",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "aggregated_lag_offsets",
            "alertUIShow": "true",
            "alertLabel": "Aggregated Lag Offsets",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "Threshold for delay of druid",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delay_of_druid_real_time",
            "alertUIShow": "true",
            "alertLabel": "Delay Of Druid Real Time",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "Threshold for delay of kafka",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delay_of_kafka_real_time",
            "alertUIShow": "true",
            "alertLabel": "Delay Of Kafka Real Time",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "Warning threshold for source delay in mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "source_delay_thresh_warn",
            "alertUIShow": "true",
            "alertLabel": "Source Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "90",
            "editable": true,
            "required": false,
            "description": "Critical threshold for source delay in mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "source_delay_thresh_critical",
            "alertUIShow": "true",
            "alertLabel": "Source Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "Warning threshold for processing delay in mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "process_delay_thresh_warn",
            "alertUIShow": "true",
            "alertLabel": "Process Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "90",
            "editable": true,
            "required": false,
            "description": "Critical threshold for processing delay in mins",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "process_delay_thresh_critical",
            "alertUIShow": "true",
            "alertLabel": "Process Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "10",
            "editable": true,
            "required": false,
            "description": "Threshold for number of tasks failed in the previous 1 hour",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "process_failed",
            "alertUIShow": "true",
            "alertLabel": "Process Failed",
            "alertPriority": 5
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "description": "Threshold for tasks in pending state",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "task_in_pending_state",
            "alertUIShow": "true",
            "alertLabel": "Tasks In Pending State",
            "alertPriority": 5
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 6
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "ingestion_conditions": [
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "If set to true, then if the application is killed from outside of the flow, then the application will be submitted again",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "auto_restart_on_kill"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "If set to true, then in case of delay in druid for more than provided threshold value, it will start ingestion from latest offset.",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "auto_reset_on_delay"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "If true application will always start from latest offset when you deploy it, irrespective of the previous state",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_from_latest_offset"
          }
        ],
        "resource": [
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ]
      }
    },
    {
      "type": "DruidBatchEdge",
      "properties": {
        "scheduler": [
          {
            "field_options": [
              "default",
              "proc",
              "API"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "default",
            "editable": true,
            "required": false,
            "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduling_type"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "DB URI in jdbc format, eg:jdbc:mysql://<server>:<port>>/<db_name>",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "db_url"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "DB Username",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "db_username"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "DB password",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "db_password"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Input proc to get the start_ts & end_ts values",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "in_proc"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Output proc to update the processing status",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "out_proc"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "Timestamp format to parse, default: yyyyMMddHH",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "proc",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "API",
                  "argument": {
                    "field_options": [
                      "default",
                      "proc",
                      "API"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "default",
                    "editable": true,
                    "required": false,
                    "description": "Use proc for scheduling via stored procedure & api for API based scheduling, default for normal batch ingestion",
                    "category": "scheduler",
                    "unique": false,
                    "advanced": true,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "scheduling_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "timestamp_format"
          },
          {
            "field_options": [
              "FIFO",
              "LIFO",
              "LAST_ONLY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "FIFO",
            "editable": true,
            "required": false,
            "description": "Execution mode of the oozie coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "execution_mode"
          },
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "success flag name on which ingestion will wait at default source path, add '_' in front",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "input_success_flag",
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_options": [
              "Oozie",
              "Airflow"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Choose scheduler to run your application through (\"Airflow or Oozie\")",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "scheduler_service"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "start date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "start time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "description": "end date of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "description": "end time of the coordinator",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": true,
            "description": "frequency of coordinator (in Minutes) ",
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "units": "minutes",
            "name": "frequency"
          },
          {
            "field_options": [
              "NA",
              "hourly",
              "daily"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "NA",
            "editable": true,
            "required": false,
            "description": "NA is not applicable, it means based on the frequency we will decide,if frequency is 1440 then daily otherwise hourly, if you want to change this behaviour, choose daily or hourly",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_flag_granularity",
            "hideOnUI": false,
            "name": "input_success_flag_granularity"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "concurrency means how many instances will run in parallel ",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "concurrency",
            "hideOnUI": false,
            "name": "concurrency_level"
          },
          {
            "field_type": "TEXT",
            "default": "1440",
            "editable": true,
            "required": false,
            "description": "The maximum time in minutes which an action will wait in ready or waiting state before going to timed-out state. Put -1 if never timed-out",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "units": "minutes",
            "name": "timeout"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "number of retries for a failed task",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "retries"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "When true, Ingestion will only start once success file is available at input data location",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "input_success_path_wait",
            "hideOnUI": false,
            "name": "wait_on_input_path_success_flag"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "If ingestion relies on a path other than the input path, specify comma-separated locations",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dependent_flags_locations"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "If ingestion depends on a flag other than the default _success flag, list comma-separated flags",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dependent_flag_names"
          },
          {
            "field_type": "TEXT",
            "default": "yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "used to determine dependencies & conditions based on time. For eg. run workflow every day at 3:00 PM or run action every hour",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "nominal_time_format"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Number of hours data to ingest in one batch, For Negative value interval is calculated to ingest historical data",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "batch_interval",
            "hideOnUI": false,
            "units": "hours",
            "name": "interval"
          },
          {
            "field_type": "TEXT",
            "default": "12",
            "editable": true,
            "required": true,
            "description": "Throttling helps control the rate at which data is processed",
            "category": "scheduler",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "throttle"
          }
        ],
        "input_spec": [
          {
            "field_type": "TEXT",
            "default": "HOUR",
            "editable": true,
            "required": false,
            "description": "Specifies the granularity to expect the data at, e.g. hour means to expect directories y=XXXX/m=XX/d=XX/H=XX.",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "data_granularity"
          },
          {
            "field_type": "TEXT",
            "default": "((.*part-.*)|(.*/.*?_[0-9]+))",
            "editable": true,
            "required": false,
            "description": "regex of files to ingest,Pattern that files should match to be included.",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "file_pattern"
          },
          {
            "field_options": [
              "yarn",
              "druid_native"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "yarn",
            "editable": true,
            "required": false,
            "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ingestion_mode"
          },
          {
            "field_type": "TEXT",
            "default": "'ts'=yyyyMMddHH",
            "editable": true,
            "required": false,
            "description": "“It indicates the file format used to specify the location of the input files ie. ts=yyyyMMddHH ",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "input_path_format",
            "hideOnUI": false,
            "name": "path_format"
          },
          {
            "field_options": [
              "roaring",
              "concise"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "roaring",
            "editable": true,
            "required": false,
            "description": "compress columns values, use roaring for high cardinality columns, concise is slower in most cases",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "bit_map_type"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "orc",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "Type of input format i.e parquet or json(hadoopyString template)",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "input_type"
          },
          {
            "field_options": [
              "false",
              "true"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "A combiner is a component used during the query processing phase to aggregate partial results from different data shards or segments",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "combiner"
          },
          {
            "field_options": [
              "dynamic",
              "hashed"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "hashed",
            "editable": true,
            "required": false,
            "description": "hashed partitions for better query performance, opt dynamic for faster ingestion & frequent data overwriting",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "druid_native",
              "argument": {
                "field_options": [
                  "yarn",
                  "druid_native"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "yarn",
                "editable": true,
                "required": false,
                "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ingestion_mode"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "partition_type"
          },
          {
            "field_type": "TEXT",
            "default": "5000000",
            "editable": true,
            "required": false,
            "description": "the maximum number of rows allowed within a single segment of data",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "druid_native",
                  "argument": {
                    "field_options": [
                      "yarn",
                      "druid_native"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "yarn",
                    "editable": true,
                    "required": false,
                    "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                    "category": "input_spec",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ingestion_mode"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "dynamic",
                  "argument": {
                    "field_options": [
                      "dynamic",
                      "hashed"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "hashed",
                    "editable": true,
                    "required": false,
                    "description": "hashed partitions for better query performance, opt dynamic for faster ingestion & frequent data overwriting",
                    "category": "input_spec",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "argumentCondition": {
                      "comparator": "EQUALS",
                      "value": "druid_native",
                      "argument": {
                        "field_options": [
                          "yarn",
                          "druid_native"
                        ],
                        "isMultiple": false,
                        "field_type": "LIST",
                        "default": "yarn",
                        "editable": true,
                        "required": false,
                        "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                        "category": "input_spec",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "hideOnUI": false
                      },
                      "action": "HIDE"
                    },
                    "hideOnUI": false,
                    "name": "partition_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "max_rows_per_segment"
          },
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "the number of concurrent worker tasks that run in parallel",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "druid_native",
              "argument": {
                "field_options": [
                  "yarn",
                  "druid_native"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "yarn",
                "editable": true,
                "required": false,
                "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ingestion_mode"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "maxNumConcurrentSubTasks"
          },
          {
            "field_options": [
              "yyyy-MM-dd HH:mm:ss",
              "yyyyMMddHH",
              "yyyyMMdd",
              "yyyy-MM-dd",
              "yyyy-MM-dd'T'HH:mm:ss'Z'",
              "yyyy-MM-dd'T'HH:mm:ss",
              "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'",
              "yyyy-MM-dd HH:mm:ss.SSS",
              "auto"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "yyyy-MM-dd HH:mm:ss",
            "editable": true,
            "required": false,
            "description": "Format of the timestamp in the input data",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "time_stamp_format"
          },
          {
            "field_type": "TEXT",
            "default": "time_stamp",
            "editable": true,
            "required": false,
            "description": "refers to a column in source data that contains time-based data and is used for optimizing druid queries",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "display_name": "time_stamp_column",
            "hideOnUI": false,
            "name": "column"
          },
          {
            "field_options": [
              "HOUR",
              "MINUTE",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "HOUR",
            "editable": true,
            "required": false,
            "description": "Multiple segments can be created per time chunk. For example, when set to day, the events of the same day fall into the same time chunk",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "segment_granularity"
          },
          {
            "field_options": [
              "MINUTE",
              "HOUR",
              "DAY"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "MINUTE",
            "editable": true,
            "required": false,
            "description": "Finest granularity that you can query at and still receive sensible results, note that you can still query at anything coarser than this granularity",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "query_granularity"
          },
          {
            "field_options": [
              "json",
              "parquet",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "Format type for parsing timestamp values during data ingestion",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "parser_spec_format_type"
          },
          {
            "field_type": "TEXT",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Whether to use ingestion-time rollup or not. Note that rollup is still effective even when queryGranularity is set to none. Your data will be rolled up if they have the exactly same timestamp.",
            "category": "input_spec",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rollup"
          },
          {
            "field_type": "TEXT",
            "default": "500000",
            "editable": true,
            "required": false,
            "description": "The maximum number of records to store in memory before persisting to disk",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "yarn",
              "argument": {
                "field_options": [
                  "yarn",
                  "druid_native"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "yarn",
                "editable": true,
                "required": false,
                "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ingestion_mode"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "max_rows_in_memory"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "used during data ingestion to perform transformations on the data fields before they are ingested into Druid",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "transform_spec"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated dimensions in decreasing order of priority",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "dimensions_priority"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "provide the json value for context",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "context"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Specify comma separated properties in json format. Example: spec->tuningConfig->jobProperties->mapreduce.map.memory.mb:9500",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties"
          },
          {
            "field_type": "TEXT",
            "default": ",_->_:",
            "editable": true,
            "required": false,
            "description": "Specify _ separated delimiter for extra properties. Default: \",\" as separator, \"->\" as key level and \":\" for value level. Note \"_\" can't be used as any separator/delimiter.",
            "category": "input_spec",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_properties_delimiters"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "3072",
            "editable": true,
            "required": true,
            "description": "memory to be given to reducer",
            "category": "resource",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "yarn",
              "argument": {
                "field_options": [
                  "yarn",
                  "druid_native"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "yarn",
                "editable": true,
                "required": false,
                "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ingestion_mode"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "units": "mb",
            "name": "map_reducer_memory"
          },
          {
            "field_type": "TEXT",
            "default": "druid_batch.hb",
            "editable": true,
            "required": true,
            "description": "Queue name for map reduce job",
            "category": "resource",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "yarn",
              "argument": {
                "field_options": [
                  "yarn",
                  "druid_native"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "yarn",
                "editable": true,
                "required": false,
                "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "ingestion_mode"
              },
              "action": "HIDE"
            },
            "display_name": "queue_name",
            "hideOnUI": false,
            "name": "queue_name_map_reduce_job"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "Number of shards in a segment i.e. number of reducer tasks or the number of output files in as segment",
            "category": "resource",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "operation": "OR",
              "argumentConditions": [
                {
                  "comparator": "EQUALS",
                  "value": "yarn",
                  "argument": {
                    "field_options": [
                      "yarn",
                      "druid_native"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "yarn",
                    "editable": true,
                    "required": false,
                    "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                    "category": "input_spec",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "hideOnUI": false,
                    "name": "ingestion_mode"
                  },
                  "action": "HIDE"
                },
                {
                  "comparator": "EQUALS",
                  "value": "hashed",
                  "argument": {
                    "field_options": [
                      "dynamic",
                      "hashed"
                    ],
                    "isMultiple": false,
                    "field_type": "LIST",
                    "default": "hashed",
                    "editable": true,
                    "required": false,
                    "description": "hashed partitions for better query performance, opt dynamic for faster ingestion & frequent data overwriting",
                    "category": "input_spec",
                    "unique": false,
                    "advanced": false,
                    "appKillNeeded": true,
                    "argumentCondition": {
                      "comparator": "EQUALS",
                      "value": "druid_native",
                      "argument": {
                        "field_options": [
                          "yarn",
                          "druid_native"
                        ],
                        "isMultiple": false,
                        "field_type": "LIST",
                        "default": "yarn",
                        "editable": true,
                        "required": false,
                        "description": "opt druid_native to leverage the resources from the Druid cluster, select yarn to utilize resources from the hdfs cluster",
                        "category": "input_spec",
                        "unique": false,
                        "advanced": false,
                        "appKillNeeded": true,
                        "hideOnUI": false
                      },
                      "action": "HIDE"
                    },
                    "hideOnUI": false,
                    "name": "partition_type"
                  },
                  "action": "HIDE"
                }
              ],
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "num_shards"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "If true then number of shards will be equal to numShards value given by user else shards will be calculated dynamically based on the trends of the previous hour data",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_default_shards"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "ingestion_conditions": [
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "Turn on, if want to include current hour for negative interval ingestion",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "includeCurrentHour",
            "hideOnUI": false,
            "name": "includeCurrentHrForNegativeInterval"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "create_success_file"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "editable": true,
            "required": false,
            "description": "batch ingestion begins only when real-time ingestion is inconsistent",
            "category": "ingestion_conditions",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "display_name": "data_consistency",
            "hideOnUI": false,
            "name": "check_real_time"
          }
        ],
        "io_config": [
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "io_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "csv",
              "argument": {
                "field_options": [
                  "json",
                  "parquet",
                  "orc",
                  "csv"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "parquet",
                "editable": true,
                "required": false,
                "description": "Type of input format i.e parquet or json(hadoopyString template)",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "input_type"
              },
              "action": "HIDE"
            },
            "display_name": "num rows to be skipped in csv",
            "hideOnUI": false,
            "name": "skip_header_rows_csv"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "provide the headers of the csv files in the same order in which data is present",
            "category": "io_config",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "csv",
              "argument": {
                "field_options": [
                  "json",
                  "parquet",
                  "orc",
                  "csv"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "parquet",
                "editable": true,
                "required": false,
                "description": "Type of input format i.e parquet or json(hadoopyString template)",
                "category": "input_spec",
                "unique": false,
                "advanced": false,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "input_type"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "csv_headers_schema"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Warning",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "6",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to be processed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "TotalDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Total Delay Critical",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps still need to processed which failed (not waiting for success flag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayWarning",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps still need to processed which failed (not waiting for success flag)",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "RelativeDelayCritical",
            "alertUIShow": "true",
            "alertLabel": "Relative Delay Critical",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesWarning",
            "alertUIShow": "true",
            "alertLabel": "Misses Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "4",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing were missed",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "MissesCritical",
            "alertUIShow": "true",
            "alertLabel": "Misses Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "description": "warning alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorWarning",
            "alertUIShow": "true",
            "alertLabel": "Error Warning",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "description": "critical alert threshold on how many timestamps data processing gave an error",
            "category": "health_thresholds",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "ErrorCritical",
            "alertUIShow": "true",
            "alertLabel": "Error Critical",
            "alertPriority": 4
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "snooze alerts based on thresholds provided",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ]
      }
    },
    {
      "type": "NoopStreamEdge",
      "properties": {
        "source": [
          {
            "field_type": "TEXT",
            "default": "20000",
            "editable": true,
            "required": false,
            "description": "Backoff time to wait before trying to determine the leader of a partition that has just lost its leader",
            "category": "source",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "refresh_leader_backoff_ms"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "15",
            "editable": true,
            "required": false,
            "description": "stream micro batch duration in seconds",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "stream_batch_duration"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "num_executors"
          },
          {
            "field_type": "TEXT",
            "default": "5G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "1",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "general": [
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/NoopStreamEdge/spark240/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "extra_configurations": [
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ]
      }
    },
    {
      "type": "StreamAggregateEdge",
      "properties": {
        "general": [
          {
            "field_options": [
              "append",
              "complete",
              "update"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "append",
            "editable": true,
            "required": false,
            "description": "Spark supported OutputMode to be used for this job. Some modes might not be supported depending on the nature of the job",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_mode"
          },
          {
            "field_options": [
              "parquet",
              "json",
              "csv"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "parquet",
            "editable": true,
            "required": false,
            "description": "file format to be used while writing data for output directory",
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_data_format"
          },
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_partitions_list"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of output partitions to use if repartitioning.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "input partitions",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "input_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "Approximate number of offsets/messages to process per task. If needed bigger tasks would be split, such that task size remains around this value.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "offsets_per_task"
          },
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/StreamAggregateEdge/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "Success flag will be created by this name in the output directory",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "600",
            "editable": true,
            "required": false,
            "description": "stream micro batch duration in seconds",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "stream_batch_duration"
          },
          {
            "field_type": "TEXT",
            "default": "1000000",
            "editable": true,
            "required": false,
            "description": "Use maxOffsetsPerTrigger option to limit the number of records to fetch per trigger.",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "max_offsets_per_trigger"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "extra_configurations": [
          {
            "field_options": [
              "latest",
              "earliest",
              "timestamp",
              "offset"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "latest",
            "editable": true,
            "required": false,
            "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_from"
          },
          {
            "field_options": [
              "latest",
              "earliest",
              "failure"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "earliest",
            "editable": true,
            "required": false,
            "description": "",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "fallback_strategy"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "Starting Offsets for every partition in every topic, for example: {\"c8.ac_three_model\":{\"0\":2628557},\"c8.mn.acm.cm\":{\"2\":463136383,\"5\":463256156,\"4\":463285000,\"1\":463219667,\"3\":463129661,\"0\":463107949}}",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "inputFormat": "JSON",
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "offset",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "offset_json"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Used when start_from is set to timestamp. Should be in format yyyyMMddHH",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "start_timestamp"
          },
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to kafka_output.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_kafka_output_properties"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "warning threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_warning",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "description": "critical threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_critical",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "resource": [
          {
            "field_type": "TEXT",
            "default": "500",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_executors"
          },
          {
            "field_type": "TEXT",
            "default": "2048",
            "editable": true,
            "required": false,
            "description": "max memory allowed per executor apart from heap",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "yarn_executor_memory_overhead"
          },
          {
            "field_type": "TEXT",
            "default": "3G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ],
        "output_kafka": [
          {
            "field_options": [
              "false",
              "true"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "value": "false",
            "editable": true,
            "required": false,
            "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "push_to_kafka"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": false,
            "required": false,
            "description": "Flux data store id of output Kafka",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "output_kafka_store_id"
          },
          {
            "field_options": [
              "c8-kafka-poc",
              "hb-magneto-kafka",
              "dpgcp-use1d-purple",
              "adc-data-testkafka",
              "adc-data-kbbkafka",
              "adc-data-semKafka",
              "cmgcp-euw1b-kafka",
              "cmgcp-use1d-kafka",
              "adc-data-cmkafka",
              "adc-data-maxKafka",
              "adc-data-taxonomyKafka",
              "cmgcp-apse1b-kafka",
              "cmgcp-usw1b-kafka",
              "semgcp-uswest-kafka",
              "adc-data-s2sKafka"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "value": "adc-data-kbbkafka",
            "editable": true,
            "required": false,
            "description": "",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_kafka_cluster"
          },
          {
            "field_options": [
              "172.24.200.115:9092",
              "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092",
              "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092",
              "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092",
              "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094",
              "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092",
              "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092",
              "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092",
              "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092",
              "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092",
              "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092",
              "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092",
              "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092"
            ],
            "argumentConditionForFieldOptions": {
              "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094": {
                "comparator": "EQUALS",
                "value": "adc-data-maxKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-cmkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-taxonomyKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-usw1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "172.24.200.115:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-testkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-apse1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092": {
                "comparator": "EQUALS",
                "value": "semgcp-uswest-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-semKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-kbbkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-use1d-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "dpgcp-use1d-purple",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-s2sKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-euw1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              }
            },
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "bootStrapServers"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "output_topic"
          },
          {
            "field_type": "TEXT",
            "default": "633554432",
            "value": "633554432",
            "editable": true,
            "required": false,
            "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "buffer_memory"
          },
          {
            "field_type": "TEXT",
            "default": "500",
            "value": "500",
            "editable": true,
            "required": false,
            "description": "the upper bound on the delay for batching by producer",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "linger_ms"
          },
          {
            "field_type": "TEXT",
            "default": "80384",
            "value": "80384",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "batch_size"
          },
          {
            "field_type": "TEXT",
            "default": "420000",
            "value": "420000",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "request_timeout_ms"
          }
        ]
      }
    },
    {
      "type": "StructStreamEdge",
      "properties": {
        "resource": [
          {
            "field_type": "TEXT",
            "default": "0",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "min_executors"
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "idle time in seconds after which executors become eligible for removal",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_idle_timeout"
          },
          {
            "field_type": "TEXT",
            "default": "500",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "max_executors"
          },
          {
            "field_type": "TEXT",
            "default": "2048",
            "editable": true,
            "required": false,
            "description": "max memory allowed per executor apart from heap",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "yarn_executor_memory_overhead"
          },
          {
            "field_type": "TEXT",
            "default": "3G",
            "editable": true,
            "required": false,
            "description": "memory allocated to executors in GB (Eg. 10G)",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_memory"
          },
          {
            "field_type": "TEXT",
            "default": "2",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "executor_cores"
          },
          {
            "field_type": "TEXT",
            "default": "2g",
            "editable": true,
            "required": false,
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "driver_memory"
          },
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ],
        "general": [
          {
            "field_type": "TEXT",
            "default": "ts",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_partitions_list"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "number of output partitions to use if repartitioning.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "output_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "input partitions",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "input_splits"
          },
          {
            "field_type": "TEXT",
            "default": "-1",
            "editable": true,
            "required": false,
            "description": "Approximate number of offsets/messages to process per task. If needed bigger tasks would be split, such that task size remains around this value.",
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "offsets_per_task"
          },
          {
            "field_type": "TEXT",
            "default": "/prod_code/Rule-Manager/master/scripts/StructStreamEdge/spark240/run.sh",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "script_path"
          }
        ],
        "ETL_Properties": [
          {
            "field_type": "TEXT",
            "default": "_SUCCESS",
            "editable": true,
            "required": false,
            "description": "Success flag will be created by this name in the output directory",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "success_flag_name"
          },
          {
            "field_options": [
              "ds_column_schema",
              "fields_meta"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "fields_meta",
            "editable": true,
            "required": false,
            "description": "table to use for getting Schema details",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "schema_source"
          },
          {
            "field_type": "TEXT",
            "editable": true,
            "required": false,
            "description": "ETL transformations will be visible by this name on the Flux Data tab.",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "etl_rule_source"
          },
          {
            "field_options": [
              "None",
              "ad_click",
              "french_keyword_categories",
              "google_domain_categories",
              "google_keyword_categories",
              "google_url_categories",
              "hb_adclick",
              "homepage_user_history",
              "kbb_logs",
              "keyword",
              "kmean_domain_category",
              "kmean_url_category",
              "kwd_category",
              "msn_log",
              "newsPromptStream",
              "pageview",
              "prebid_auction_participants",
              "prebid_rendered_ad",
              "test",
              "video_error",
              "video_event",
              "video_rtblog",
              "viewable_iframe_impression",
              "visible_impression",
              "ALL",
              "local_click",
              "local_click_expand",
              "arb",
              "perform_broad_match_max_expand",
              "perform_broad_match_max",
              "adx_log",
              "ybnca_adx_log",
              "ad_click_keyword_data_one_time",
              "kbb_logs_expanded",
              "dmm_rendered_ad",
              "dmm_auction_participants",
              "test_bulk_batch",
              "extract_url_categories_adhoc",
              "anushree_adhoc",
              "dm_ad_click",
              "dm_page_view",
              "dm_kw_details",
              "dm_provider_timezone_mapping",
              "etl_test",
              "sparta_email_tracking",
              "home_page",
              "bulk_processor_test",
              "vidharth_adhoc",
              "web_result_view",
              "extract_domain_category_adhoc",
              "web_result",
              "extract_keyword_category_adhoc",
              "max_serving_logs",
              "sem_sell_impressions",
              "reporting",
              "sem_sell_clicks",
              "sem_sell_clicks_dm",
              "sem_buy_sell_snap_account",
              "sem_buy_sell_snap_campaign",
              "sem_buy_sell_snap_adgroup",
              "sem_buy_sell",
              "sem_buy_sell_snap_ad",
              "db_utils_unit_test",
              "etl_sid_adhoc",
              "apps_stats_audit",
              "sem_keyword_category_hbase",
              "dm_kw",
              "max_concept_match",
              "sem_buy_sell_cost_distribution",
              "sparta",
              "ad_click_test",
              "visible_impression_flow",
              "ad_click_test_flow",
              "struct_stream_camus",
              "sem_sell_impressions_client_side",
              "dm_one_click_ad_data",
              "yarn_application_metrics",
              "flux_yarn_app_level_metrics",
              "yarn_queue_usage_stats",
              "keyword_attribution_hbase",
              "empty",
              "extract_url_category_adhoc_2",
              "fbbp",
              "sem_ads",
              "layer1_impression",
              "ad_details",
              "max_view_record",
              "max_view_record_hbase",
              "max_view_record_flow_hbase",
              "max_impression_log",
              "dm_provider_mapping_hbase",
              "struct_stream_camus_timestamp",
              "apps_reporting",
              "auditor_test",
              "test_blank",
              "ra_visible_impressions",
              "ra)visible_impressions",
              "keyword_view_popcat",
              "max_serving_logs_test",
              "max_conversion_logs",
              "dm_ad_click_test_flow",
              "dm_page_view_test_flow",
              "s2s_ad_feed",
              "dmp_segments",
              "max_converison_debug_test",
              "kbb_logs_camus",
              "kbb_logs_expanded_camus",
              "process_logs",
              "dmp_user_segment_data",
              "dm_local_adclick",
              "dm_local_addump",
              "max_event_conversion",
              "max_event_confirmclick",
              "max_event_qualifiedads",
              "max_event_impression",
              "max_event_view_priority",
              "max_event_view",
              "max_event_click",
              "dm_external_click_postback_log",
              "topical_keyword_performance",
              "rightJoinTest",
              "max_event_all_qualifiedads",
              "bid_logs",
              "sem_sell_clicks_realtime",
              "sem_entity_data",
              "visitor_log",
              "subscriber_notification_log",
              "ra_ebay_dump_test",
              "ad_details_ra_ebay",
              "url_topics",
              "url_topics_struct",
              "hype_learning_stats_ctr_hourly",
              "hype_learning_stat_ctr_hourly",
              "dm_raw_ad_click",
              "hype_learning_stats_impressions_ctr_hourly",
              "learned_pirate_keyword",
              "application_resource_request",
              "sem_widget_impressions",
              "sem_widget_clicks",
              "dmp_user_segment_batch",
              "sem_affiliate_page_view",
              "sem_affiliate_ad_impression",
              "sem_affiliate_ad_click",
              "sem_affiliate_piggy_back_info",
              "no_rule_source",
              "dm_raw_page_view",
              "kbb_logs_c13",
              "kbb_logs_madmax",
              "kbb_logs_madmax_separate",
              "layer1_impression_umang_test",
              "kbb_bid_test_ankur",
              "kbb_logs_non_bid_test",
              "visible_impression_resource_test",
              "kafka_click_logs",
              "max_conversion_calls",
              "max_logs_raw_impression",
              "d2d_google_analytics",
              "apps_camus",
              "sem_affiliate_page_view_test",
              "sample_sem_affiliate_piggy_back",
              "training_affiliate_page_view",
              "training_sem_affiliate_piggy_back",
              "sparta_etl_parquet",
              "page_view_ankur",
              "page_view_test",
              "kbb_logs_expanded_madmax",
              "rpm_immediate_learning",
              "rpm_immediate_learner",
              "keyword_view_test",
              "max_logs_raw_clickconfirm",
              "sparta_reproccess",
              "sparta_etl_parquet_new",
              "max_logs_raw_conversion",
              "sem_sell_clicks_test",
              "fo_details",
              "smm_ap_logs",
              "prebid_provider_request",
              "dm_one_click_ad_data_test",
              "ad_click_hemali_test",
              "keyword_click_ginsu",
              "page_view_flow",
              "keyword_view_flow",
              "ad_click_stream",
              "ad_click_batch",
              "ad_click_ginsu",
              "hbase_testing",
              "hbase_get_testing",
              "keyword_view_streaming",
              "max_event_test",
              "max_logs_raw_adresponselist",
              "platform_storage_ml",
              "ad_click_recovery",
              "kbb_logs_test",
              "kbb_logs_expanded_test",
              "hype_ctr_hourly_arpit",
              "external_jar_test",
              "ra_ad_click",
              "keyword_click",
              "ad_click_ginsu_test",
              "adhover",
              "prebid_rendered_ad_test",
              "prebid_rendered_ad_test_1",
              "c8_hadoop_yarn",
              "page_view_snap",
              "bid_api",
              "nid_contextual_reporting",
              "contextual_impressions",
              "page_view_snap_batch",
              "ad_click_direct",
              "max_rawcloudfront_conv_logs",
              "tac",
              "prebid_auction_participants_business",
              "vought",
              "rule_test_etl",
              "contextual_put",
              "c8_hadoop_yarn_spark",
              "contextual_test",
              "c8_hadoop_yarn_test",
              "ankur_stuck_test",
              "contextual_api",
              "sem_sell_click_dm_test",
              "prebid_rendered_ad_test_2",
              "max_visitor_segment_logs",
              "max_conversion_pixel_event_stats",
              "prebid_rendered_ad_test_3",
              "ad_click_test_1",
              "ap_bid_api",
              "ad_click_eos",
              "ra_bid_api",
              "test_hbase",
              "hype_learning_stats_ctr_realtime",
              "max_conversion_audited_logs",
              "c8_auto_kbb_user_segment_keyword",
              "ad_click_final_test",
              "web_result_test",
              "kbb_user_segment_dmp",
              "kbb_user_segment_dmp_batch",
              "ad_performance_measurement",
              "l1log",
              "kbb_logs_expanded_flow_test",
              "kbb_logs_expanded_flow_test_batch",
              "kbb_logs_expanded_batch",
              "max_logs_pixel_system_event",
              "dm_external_click_postback_logback",
              "hype_realtime_conversions",
              "ankur_bid_put",
              "madmax_test",
              "max_viewable_impression_logs",
              "user_data_platform",
              "app_logs",
              "cpa_logs",
              "ra_recovery",
              "keyword_view_spark",
              "cpa_logs_test",
              "max_autos_leadgen_conversion_logs",
              "ra_page_view",
              "ac_contextual_get",
              "contextual_api_test",
              "hemali_adhoc",
              "contextual_batch_put",
              "ra_ad_detail",
              "ra_ad_details",
              "bid_api_ad_click",
              "prebid_rendered_ad_bdata_hbase",
              "hadoop_vault_log_agg",
              "hadoop_vault_log",
              "hadoop_logs_rule",
              "prebidrenderedad_spark_rpm",
              "agg_ra_test",
              "flow_alerts",
              "mowx_lost_opportunity",
              "max_ozil_crawl_data",
              "flow_kt_demo_new",
              "analytics_events",
              "keyword_stats_test",
              "agg_ra_batch",
              "agg_batch_ra",
              "smm_service_logs",
              "sem_ginsu_keyword_impressions",
              "sem_ginsu_keyword_clicks",
              "druid_historical_metrics",
              "analytics_optimiser_log",
              "dm_provider_expand",
              "kbb_madmax_expanded_batch",
              "adclick_demo",
              "ad_details_batch",
              "cleon_orderbooks",
              "cleon_tickers",
              "immediate_pattern_bidder_api",
              "dataplatform_adc_journald",
              "prebid_recovery",
              "usersegment_id",
              "ginsu_beacon_logmaster",
              "analytics_events_qa",
              "usersegment_get",
              "web_results_google_csa",
              "ad_click_stop_loss",
              "ra_stop_loss",
              "usersegment_new",
              "spotlight_event_pixel_logging",
              "pb_snotify",
              "rendered_ad_issue",
              "process_logs_hourly",
              "sem_google_recaptcha_impressions",
              "prog_ra",
              "sem_sell_impressions_test",
              "prog_pr",
              "creative_logs",
              "delayed_data_rule",
              "analytics_backend_logs",
              "delayed_data_compact_rule",
              "ap_camus_data",
              "ra_hbase_test",
              "usersegment_apollo",
              "ap_hbase",
              "prog_ap",
              "page_type_format",
              "s2s_logs",
              "rule_source_nitish_test",
              "anunay_delayed_data",
              "hemali_test",
              "ad_click_join_test",
              "google_suggested_terms",
              "infra_metrics",
              "dataplatform_adc",
              "ra_bidder_alert_agg",
              "ap_bidder_alert_agg",
              "ua_device_atlas",
              "dataplatform_adc_journald_hive",
              "demand_reports_summary",
              "dataplatform_adc_journald_hive_1",
              "pb_snotify_enriched",
              "demand_reports_summary_test",
              "demand_reports_summary_backfill",
              "prebid_acution_participants",
              "analytics_backendlogs",
              "contextual_api_v2",
              "app_camus_compaction",
              "analytics_backend_log",
              "analytics_backend_logs_hdfs",
              "max_conversion_reporting_logs",
              "demand_advertiser_data",
              "ra_ad_detail_test",
              "short_url",
              "short_url_stage",
              "short_url_v2",
              "prebid_rendered_ad_new1",
              "pv_new",
              "kbb_basis2",
              "ac_basis_test",
              "brandsafety",
              "ra_bidder_alert_agg_test",
              "curated_deals_df_test",
              "adc_billing",
              "hourly_ad_exchange_summary",
              "hourly_open_bidding_summary",
              "programmatic_ap_df",
              "daily_rendered_ad_advertiser_summary",
              "deals_debug",
              "topic_rendered_ad_summary",
              "dynamic_bid_floor",
              "pluto_join_test",
              "IL_bigquery",
              "max_coversions",
              "max_conversions",
              "IL_bigquery_2",
              "IL_bigquery_3",
              "hemali_adhoc_test",
              "test_multi_cluster",
              "max_impressions",
              "curated_deals_lib",
              "prog_adp",
              "programmatic_ap_df_test",
              "hourly_ad_exchange_v2",
              "hourly_open_bidding_v2",
              "deal_multi",
              "ap_dgcp_test",
              "prog_multi",
              "ra_dgcp_test",
              "prebid_multi",
              "direct_house_prog",
              "hourly_unfilled_etl",
              "prog_ap_rules",
              "prog_pr_rules",
              "prog_ra_rules",
              "ap_raw_yahoo",
              "ra_raw_yahoo",
              "raw_prebid_rendered_ad ",
              "raw_prebid_auction_participants",
              "raw_prebid_auction_participants  ",
              "raw_prebid_provider_request",
              "raw_ebda_slot_debug",
              "raw_ad_performance_measurement",
              "raw_slot_debug_logs",
              "raw_hb_error_logs",
              "raw_prebid_failover_table",
              "raw_js_error_log",
              "raw_mowgli_logs",
              "raw_mowx_issues",
              "ad_click_nitish_test",
              "raw_omni_logs",
              "prebid_auction_participants_yahoo_test",
              "raw_video_perf  ",
              "raw_video_perf_ra  ",
              "raw_hb_l1_log",
              "raw_dynamic_bid_floor  ",
              "ap_dgcp_test_y1",
              "unified_direct_house_prog",
              "unified_hourly_ad_exchange_summary",
              "unified_hourly_open_bidding_summary",
              "unified_hourly_unfilled_etl",
              "raw_ra_nitish_test",
              "raw_project_events",
              "raw_auto_refresh_log",
              "raw_adp_viewability",
              "prog_atlas_adp_rules",
              "raw_sherlock_logs",
              "raw_konom_metrics",
              "raw_adp_viewability_v2",
              "sem_sell_impressions_test2",
              "yahoo_stats_big_query",
              "unified_direct_house_prog_backup",
              "unified_direct_house_prog1",
              "Yahoo_BigQuery_Pipeline",
              "unified_hourly_ad_exchange_summary1",
              "unified_hourly_open_bidding_summary1",
              "unified_hourly_unfilled1",
              "raw_prebid_auction_participants_realtime",
              "ad_click_copy  ",
              "Yahoo_Stats_Hourly_BigQuery",
              "ems_serving_logs",
              "max_viewable_impressions",
              "max_clicks",
              "no_rules",
              "pv_snap_batch",
              "prog_struct_test",
              "logs_processing",
              "raw_abp_logs  ",
              "logs_processing_new",
              "Log_processing_kbbDS",
              "error_generator_etl",
              "raw_logging_metrics",
              "raw_bid_request_log",
              "raw_ad_code_log",
              "sem_keyword_clicks",
              "l1log_deduplication",
              "sem_keyword_impressions",
              "dmm_ap",
              "dmm_ra",
              "sem_sell_impressions_source",
              "template_uuid_logs",
              "ra_deduplication",
              "raw_expired_logging_events",
              "raw_hb_audit_log",
              "test_hive_on_gcs",
              "ad_click_nitish_test_2",
              "raw_ae_creative_data",
              "raw_ae_events",
              "raw_ae_result",
              "iab_google_url_categories",
              "raw_ebda_cookie_sync",
              "stream_agg_edge_test",
              "raw_lost_opportunity",
              "stream_agg_edge_test2",
              "stoploss_ad_click_flow",
              "stoploss_ra_flow",
              "adc_cbb_contextual",
              "automation_etl_rule_source",
              "yahoo_stats_test_overwrite",
              "bss_ap_summary",
              "dynamic_bid_floor_batch",
              "sem_page_impression",
              "raw_druid_metrics",
              "raw_adp_viewability_batch",
              "raw_analytics_optimiser",
              "raw_dynamic_bf_batch",
              "ap_bidder_agg_batch",
              "ad_click_kshem",
              "bss_ra_summary",
              "raw_visitor_metrics",
              "bss_valid_bid_ap_summary",
              "raw_video_completion_rate",
              "nitish_test_raw_ra",
              "raw_supply_latency",
              "raw_demand_latency",
              "pr_ap_ra_yahoo",
              "video_perf_join_test",
              "crawled_url_title",
              "ad_click_stoploss",
              "ra_stoploss",
              "url_ip_data_rules",
              "raw_bes_metrics",
              "sem_performance_metrics",
              "raw_ssp_server_sys_log_rules",
              "raw_ssp_server_metric_log_rule",
              "raw_ssp_server_raw_log",
              "raw_ap_stream_agg_test",
              "spark_analytics_log",
              "rpm_page_view_stats",
              "ad_click_stoploss_debug",
              "prebid_rendered_ad_reprocess",
              "stoploss_debug_ad",
              "mobile_app_finance",
              "provider_payment_info_camus",
              "raw_ae_client",
              "video_error_success_rule",
              "bidder_logs_raw",
              "bidder_logs_batch",
              "bidder_logs",
              "bidder_logs_hbase",
              "pb_snotify_enriched_batch",
              "raw_ra_df_nitish_test",
              "raw_ra_df_nitish_test_2",
              "raw_ra_df_test_nitish",
              "ap_agg_batch_sampling",
              "test_kafka_avro_topics",
              "page_view_basis2_rule",
              "raw_ap_agg_test",
              "bidder_ad_click",
              "intent_labs_enr_stg_rule",
              "raw_ad_performance_debug_log",
              "ap_aggregate_rules",
              "kv_snap_test_rules",
              "intent_labs_enr_prod_rule",
              "raw_ap_transform",
              "ad_click_suryansh_test",
              "ac_kpd_test",
              "ae_events",
              "ae_results",
              "ae_creative_data",
              "ae_client",
              "bes_metrics",
              "redis-df-1",
              "redis-ds-test-22",
              "sem_article_impression",
              "ad_click_in",
              "enr_il_deduplication",
              "daily_uncategorised_sell_keyword",
              "page_view_et",
              "ra_reprocess",
              "prebid_auction_participants_et",
              "prebid_rendered_ad_et",
              "intent_labs_enr_prod_rule_revenue",
              "intent_labs_enr_prod_rule_other",
              "intent_labs_enr_prod_rule_cost",
              "ra_sampling",
              "prebid_provider_request_et",
              "intent_labs_enr_prod_rule_costrule",
              "bidder_page_view",
              "bidder_keyword_click",
              "keyword_click_et",
              "keyword_view_et",
              "raw_hb_access_log",
              "enr_il_deduplication_stg",
              "intent_labs_enr_prod_multipart",
              "intent_labs_enr_stg_late_rule",
              "",
              "ra_migration_test",
              "ra_migration",
              "video_performance",
              "intent_labs_enr_stg_part_rule",
              "raw_cop_performance_logs",
              "template_uuid_test",
              "sem_keyword_clicks_flow_test",
              "sem_page_impressions_test",
              "sem_keyword_impression_test",
              "sem_google_recaptcha_impressions_test",
              "google_suggested_terms_test",
              "sem_ginsu_keyword_clicks_test",
              "web_results_google_csa_test",
              "sem_article_impression_test",
              "sem_performance_metrics_test",
              "sem_ginsu_keyword_impressions_test",
              "google_suggested_terms_test_1",
              "sem_google_recaptcha_impressions_test_1",
              "sem_article_impression_test_1",
              "web_results_google_csa_test_1",
              "sem_ginsu_keyword_clicks_test_1",
              "sem_performance_metrics_test_1",
              "sem_ginsu_keyword_impressions_test_1",
              "video_events_pureplay",
              "video_events_pureplay_1",
              "eos_test_logs",
              "interface_apps",
              "app_api",
              "app_db",
              "app_extapi",
              "video_dump_rules",
              "ebda_timeline",
              "mowx_timeline",
              "bes_ruleset",
              "ybn_creative_blocking",
              "url_keyword_contextuality",
              "ps_application_logs",
              "nv_sv_ps_application_logs",
              "dmp_segments_put",
              "autotuning_load_data",
              "autotuning_load_data_1",
              "autotuning_load_data_2",
              "autotuning_load_data_3",
              "dmp_get",
              "nv_sv_wp_application_logs",
              "join-opt-ad_click",
              "ra-join-opt",
              "ad_click_stoploss_testing",
              "server_side_ra",
              "ad_quality_ra",
              "ap_deals_sampling",
              "flow_vl2r_app_base_test",
              "anti_spam_views",
              "flow_test_vl2r_app_base",
              "ap_deals_sampling_new",
              "suryansh_prebid_auction_participants_test",
              "ad_click_stoploss_audit",
              "ap_flux_sampling",
              "sem_keyword_compliance_regulator_app_logs",
              "ashish_test_1",
              "test_nv_sv_ps_application_logs",
              "segments_optout",
              "request_timeline_debug",
              "sem_nv_sv_ps_application_logs",
              "api_proxy_service_logs",
              "ortb_ebda_requests",
              "sem_kwd_ad_block_impression",
              "test_ashish_ra_1",
              "test_mobile_model",
              "igbid_use1d",
              "igbid_euw1b",
              "igbid_apse1b",
              "igbid_usw1b",
              "bidder_ad_click_recovery",
              "test_new_cluster_ashish",
              "test_batch_rerun_Ashish2",
              "ad_click_fast_audit",
              "request_ortb_transform",
              "ra_stoploss_test_newcluster",
              "ozil_crawler_output_redis_data_backup",
              "ortb_ebda_requests_test",
              "sub_dm_ad_click",
              "\nortb_ebda_requests",
              "sem_sell_impression_recovery",
              "ra_stoploss_test",
              "ra_stoploss_ashish_test",
              "flow_test_vr_hourly_agg",
              "ra_stoploss_test_ashish_adc",
              "adp_predicted_viewabitlity",
              "ra_stoploss_test_ashish_adc_v2",
              "ortb_ebda_outgoing_request",
              "video_completion_rate",
              "pb_snotify_snap",
              "adc_data_yarn_app_metrics",
              "ap_rules_copy",
              "kbb_basis2_copy",
              "pv_recv_rules",
              "sem_api_proxy_service_log",
              "cbb_url_topics",
              "ap_stream_agg",
              "keyword_dump",
              "sem_kwd_ad_block_impression_1",
              "flow_test_vr_app_base_compressed_33",
              "sem_sell_impression_recovery_2",
              "ad_kwd_test",
              "end_user_behaviour_data",
              "stoploss_debug_ad_test1",
              "prebid_rendered_ad_latest_copy",
              "rerun_test_stream_debug_ad",
              "rerun_test_stream_debug_ad_2",
              "cbb_kwd_topics",
              "server_side_debug",
              "sdk_stats",
              "sdk_stats_camus",
              "sdk_stats_hbase_put",
              "prebid_rendered_ad_expired_data",
              "hash_extract_rule_test",
              "hive_udf_tests",
              "ra_ad_clog_expired",
              "curated_deals_lib_test",
              "unaudited_rules_test",
              "dwm_ra_rules",
              "dwm_ra_source_hdfs_data",
              "page_view_flow_recovery",
              "keyword_dump_suggested",
              "page_view_test_eklavya",
              "pb_snotify_enriched_test_adc",
              "join-dep_test",
              "ch-test-1",
              "S3etl",
              "S3etl1",
              "join-dep-ad_click",
              "ch-test-2",
              "sql_testing",
              "sql8_testing_sub",
              "ad_click_new_hemali",
              "pb_snotify_enriched_batch_opt",
              "unified_tam",
              "ra_test_v2",
              "dmm_pb_snotify",
              "unified_tam_etl",
              "tam_backfill",
              "ad_click_copy_join_remove_test",
              "parallel_ successflag_test_suryansh",
              "testflux"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "None",
            "editable": true,
            "required": false,
            "description": "Select 'none' for not using existing rule source or select the existing rule source name that you want to use",
            "category": "ETL_Properties",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "use_existing_rules"
          }
        ],
        "stream": [
          {
            "field_type": "TEXT",
            "default": "600",
            "editable": true,
            "required": false,
            "description": "stream micro batch duration in seconds",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "stream_batch_duration"
          },
          {
            "field_type": "TEXT",
            "default": "1000000",
            "editable": true,
            "required": false,
            "description": "Use maxOffsetsPerTrigger option to limit the number of records to fetch per trigger.",
            "category": "stream",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "hideOnUI": false,
            "name": "max_offsets_per_trigger"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stream",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "depends_on_edges"
          }
        ],
        "extra_configurations": [
          {
            "field_options": [
              "latest",
              "earliest",
              "timestamp",
              "offset"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "latest",
            "editable": true,
            "required": false,
            "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "start_from"
          },
          {
            "field_options": [
              "latest",
              "earliest",
              "failure"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "earliest",
            "editable": true,
            "required": false,
            "description": "",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "fallback_strategy"
          },
          {
            "field_type": "TEXT",
            "default": "{}",
            "editable": true,
            "required": false,
            "description": "Starting Offsets for every partition in every topic, for example: {\"c8.ac_three_model\":{\"0\":2628557},\"c8.mn.acm.cm\":{\"2\":463136383,\"5\":463256156,\"4\":463285000,\"1\":463219667,\"3\":463129661,\"0\":463107949}}",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "inputFormat": "JSON",
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "offset",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "offset_json"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Used when start_from is set to timestamp. Should be in format yyyyMMddHH",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "timestamp",
              "argument": {
                "field_options": [
                  "latest",
                  "earliest",
                  "timestamp",
                  "offset"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "latest",
                "editable": true,
                "required": false,
                "description": "Start from earliest or latest or from a timestamp in kafka when starting the edge.\nNOTE : This will be honoured only when starting a new edge; Thereafter checkpoints will be used",
                "category": "extra_configurations",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "start_from"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "start_timestamp"
          },
          {
            "field_type": "TEXT",
            "default": ",",
            "editable": true,
            "required": true,
            "description": "delimiter used for splitting extra properties",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "delimiter"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to job.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_job_properties"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "extra confs for spark submit command. (Eg. --conf key1=val1 --conf key2=val2)",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_conf"
          },
          {
            "field_type": "TEXT",
            "default": "1000",
            "editable": true,
            "required": false,
            "description": "Spark UI property to set number of retained stages. Older stages will get deleted and wont be visible on spark ui. see https://spark.apache.org/docs/latest/configuration.html#spark-ui for more information",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_ui_retained_stages"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "description": "comma separated list of extra properties to be appended to kafka_output.properties; leave empty if not required",
            "category": "extra_configurations",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_kafka_output_properties"
          }
        ],
        "health_thresholds": [
          {
            "field_type": "TEXT",
            "default": "3",
            "editable": true,
            "required": false,
            "description": "warning threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_warning",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Warning",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "5",
            "editable": true,
            "required": false,
            "description": "critical threshold for delay in success flag creation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "success_delay_critical",
            "alertUIShow": "true",
            "alertLabel": "Success Delay Critical",
            "alertPriority": 3
          },
          {
            "field_type": "TEXT",
            "default": "processingDelay,-,-;sourceDelay,-,-;dataAtSource,-,-;expectedRecoveryTime,-,-",
            "editable": true,
            "required": false,
            "description": "Graphite metric thresholds for calculating health.\nFollow this format -\n metricSuffix1,warn,critical ; metricSuffix2,warn,critical",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "CHAR_SEP_PROPS",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stream_delay_thresholds",
            "alertUIShow": "sourceDelay,processingDelay",
            "alertLabel": "Source Delay,Processing Delay",
            "alertPriority": 1
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Kafka topics to be omitted for source delay calculation",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "omit_kafka_topics",
            "alertUIShow": "true",
            "alertLabel": "Omit Kafka Topics",
            "alertPriority": 4
          },
          {
            "field_type": "TEXT",
            "default": "30",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_warning_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Warning",
            "alertPriority": 2
          },
          {
            "field_type": "TEXT",
            "default": "60",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "stuck_duration_critical_threshold",
            "alertUIShow": "true",
            "alertLabel": "Stuck Duration Critical",
            "alertPriority": 2
          },
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "snooze"
          },
          {
            "field_options": [
              "true",
              "false"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "true",
            "editable": true,
            "required": false,
            "description": "Enable alerts for consistency",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "enable_consistency_alerts"
          },
          {
            "field_type": "TEXT",
            "default": "0:0",
            "editable": true,
            "required": false,
            "description": "Set this if sampling or expand rules are enabled. For a given partition, row count of sink should be within this percent range of row count of source. If not and if consistency alerts are enabled then this will trigger an alert. Format is lower:higher eg: 5:10",
            "category": "health_thresholds",
            "unique": false,
            "advanced": true,
            "inputFormat": "RATIO",
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "row_count_deviation_percentage"
          }
        ],
        "stuck": [
          {
            "field_options": [
              "1",
              "0"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "0",
            "editable": true,
            "required": false,
            "description": "",
            "category": "stuck",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "kill_when_stuck"
          }
        ],
        "ingestion_config": [
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom Spark processing JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "spark_processing_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "override this configuration with a custom rule-service JAR path only if the latest version is not intended for use",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "rule_service_jar"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "editable": true,
            "required": false,
            "description": "Add additional jars if needed. If jar is already present, it will override its version. Format needed is artifactId1#path1,artifactId2#path2,... ",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "extra_jars"
          },
          {
            "field_type": "TEXT",
            "default": "/etc/hive/conf:spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the driver classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_driver_classpath",
            "hideOnUI": false,
            "name": "DATA_DRIVER_CLASSPATH"
          },
          {
            "field_type": "TEXT",
            "default": "spark-streaming-kafka-0-10_2.11-2.4.0.jar:kafka-clients-2.5.0.jar:metrics.properties:etl-gson-2.2.5.jar:guava-16.0.1.jar:hbase-common-2.1.0-cdh6.3.1.jar:hbase-hadoop2-compat-2.1.0-cdh6.3.1.jar:hbase-protocol-shaded-2.1.0-cdh6.3.1.jar:hbase-hadoop-compat-2.1.0-cdh6.3.1.jar:hbase-metrics-api-2.1.0-cdh6.3.1.jar:hamcrest-core-1.3.jar:hbase-shaded-protobuf-2.2.1.jar:hbase-protocol-2.1.0-cdh6.3.1.jar:hbase-shaded-netty-2.2.1.jar:hbase-metrics-2.1.0-cdh6.3.1.jar:joni-2.1.11.jar:error_prone_annotations-2.3.3.jar:junit-4.12.jar:hbase-client-2.1.0-cdh6.3.1.jar:jcodings-1.0.18.jar:hbase-shaded-miscellaneous-2.2.1.jar:spark-sql-patch-3.0.jar:spark-sql-kafka-0-10_2.11-2.4.0.jar",
            "editable": true,
            "required": false,
            "description": "jar files to include in the executor classpath",
            "category": "ingestion_config",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "display_name": "data_executor_classpath",
            "hideOnUI": false,
            "name": "DATA_EXECUTOR_CLASSPATH"
          }
        ],
        "output_kafka": [
          {
            "field_options": [
              "false",
              "true"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "false",
            "value": "false",
            "editable": true,
            "required": false,
            "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "push_to_kafka"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": false,
            "required": false,
            "description": "Flux data store id of output Kafka",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "output_kafka_store_id"
          },
          {
            "field_options": [
              "c8-kafka-poc",
              "hb-magneto-kafka",
              "dpgcp-use1d-purple",
              "adc-data-testkafka",
              "adc-data-kbbkafka",
              "adc-data-semKafka",
              "cmgcp-euw1b-kafka",
              "cmgcp-use1d-kafka",
              "adc-data-cmkafka",
              "adc-data-maxKafka",
              "adc-data-taxonomyKafka",
              "cmgcp-apse1b-kafka",
              "cmgcp-usw1b-kafka",
              "semgcp-uswest-kafka",
              "adc-data-s2sKafka"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "value": "adc-data-kbbkafka",
            "editable": true,
            "required": false,
            "description": "",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "output_kafka_cluster"
          },
          {
            "field_options": [
              "172.24.200.115:9092",
              "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092",
              "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092",
              "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092",
              "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094",
              "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092",
              "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092",
              "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092",
              "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092",
              "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092",
              "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092",
              "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092",
              "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092"
            ],
            "argumentConditionForFieldOptions": {
              "m0-max-kafka-beta.srv.media.net:9092,m0-max-kafka-beta.srv.media.net:9093,m0-max-kafka-beta.srv.media.net:9094": {
                "comparator": "EQUALS",
                "value": "adc-data-maxKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "c8-logging-kafka-5-prod.srv.media.net:9092,c8-logging-kafka-6-prod.srv.media.net:9092,c8-logging-kafka-7-prod.srv.media.net:9092,c8-logging-kafka-8-prod.srv.media.net:9092,c8-logging-kafka-9-prod.srv.media.net:9092,c8-logging-kafka-10-prod.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-cmkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "c12-nc1c-logging-kafka-1.srv.media.net:9092,c12-nc1c-logging-kafka-2.srv.media.net:9092,c12-nc1c-logging-kafka-3.srv.media.net:9092,c12-nc1c-logging-kafka-4.srv.media.net:9092,c12-nc1c-logging-kafka-5.srv.media.net:9092,c12-nc1c-logging-kafka-6.srv.media.net:9092,c12-nc1c-logging-kafka-7.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-taxonomyKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-usw1b-kafka-1.srv.media.net:9092,cmgcp-usw1b-kafka-2.srv.media.net:9092,cmgcp-usw1b-kafka-3.srv.media.net:9092,cmgcp-usw1b-kafka-4.srv.media.net:9092,cmgcp-usw1b-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-usw1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "172.24.200.115:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-testkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-apse1b-kafka-1.srv.media.net:9092,cmgcp-apse1b-kafka-2.srv.media.net:9092,cmgcp-apse1b-kafka-3.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-apse1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "broker-1.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-2.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092,broker-3.sem-prod-global-kafka-1.service.gcp-us-west-1.consul:9092": {
                "comparator": "EQUALS",
                "value": "semgcp-uswest-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "ak-1.ak.app.sem.infra:9092,ak-2.ak.app.sem.infra:9092,ak-3.ak.app.sem.infra:9092,ak-4.ak.app.sem.infra:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-semKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "172.16.201.187:9092,172.16.201.188:9092,172.16.201.189:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-kbbkafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-use1d-kafka-1.srv.media.net:9092,cmgcp-use1d-kafka-2.srv.media.net:9092,cmgcp-use1d-kafka-3.srv.media.net:9092,cmgcp-use1d-kafka-4.srv.media.net:9092,cmgcp-use1d-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-use1d-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "dpgcp-use1d-purple-kafka-2.srv.media.net:9092,dpgcp-use1d-purple-kafka-3.srv.media.net:9092,dpgcp-use1d-purple-kafka-1.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "dpgcp-use1d-purple",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "s2s-kafka-production-1.internal.media.net:9092,s2s-kafka-production-2.internal.media.net:9092,s2s-kafka-production-3.internal.media.net:9092": {
                "comparator": "EQUALS",
                "value": "adc-data-s2sKafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              },
              "cmgcp-euw1b-kafka-1.srv.media.net:9092,cmgcp-euw1b-kafka-2.srv.media.net:9092,cmgcp-euw1b-kafka-3.srv.media.net:9092,cmgcp-euw1b-kafka-4.srv.media.net:9092,cmgcp-euw1b-kafka-5.srv.media.net:9092": {
                "comparator": "EQUALS",
                "value": "cmgcp-euw1b-kafka",
                "argument": {
                  "field_options": [
                    "c8-kafka-poc",
                    "hb-magneto-kafka",
                    "dpgcp-use1d-purple",
                    "adc-data-testkafka",
                    "adc-data-kbbkafka",
                    "adc-data-semKafka",
                    "cmgcp-euw1b-kafka",
                    "cmgcp-use1d-kafka",
                    "adc-data-cmkafka",
                    "adc-data-maxKafka",
                    "adc-data-taxonomyKafka",
                    "cmgcp-apse1b-kafka",
                    "cmgcp-usw1b-kafka",
                    "semgcp-uswest-kafka",
                    "adc-data-s2sKafka"
                  ],
                  "isMultiple": false,
                  "field_type": "LIST",
                  "default": "",
                  "value": "adc-data-kbbkafka",
                  "editable": true,
                  "required": false,
                  "description": "",
                  "category": "output_kafka",
                  "unique": false,
                  "advanced": true,
                  "appKillNeeded": true,
                  "hideOnUI": false,
                  "name": "output_kafka_cluster"
                },
                "action": "HIDE"
              }
            },
            "isMultiple": false,
            "field_type": "LIST",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "bootStrapServers"
          },
          {
            "field_type": "TEXT",
            "default": "",
            "value": "",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "output_topic"
          },
          {
            "field_type": "TEXT",
            "default": "633554432",
            "value": "633554432",
            "editable": true,
            "required": false,
            "description": "The total bytes of memory the producer can use to buffer records waiting to be sent to the server.",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "buffer_memory"
          },
          {
            "field_type": "TEXT",
            "default": "500",
            "value": "500",
            "editable": true,
            "required": false,
            "description": "the upper bound on the delay for batching by producer",
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "linger_ms"
          },
          {
            "field_type": "TEXT",
            "default": "80384",
            "value": "80384",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": false,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "batch_size"
          },
          {
            "field_type": "TEXT",
            "default": "420000",
            "value": "420000",
            "editable": true,
            "required": false,
            "category": "output_kafka",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "argumentCondition": {
              "comparator": "EQUALS",
              "value": "true",
              "argument": {
                "field_options": [
                  "false",
                  "true"
                ],
                "isMultiple": false,
                "field_type": "LIST",
                "default": "false",
                "value": "false",
                "editable": true,
                "required": false,
                "description": "select 'true' to push messages to kafka. If selected 'true', fill other kafka properties as well",
                "category": "output_kafka",
                "unique": false,
                "advanced": true,
                "appKillNeeded": true,
                "hideOnUI": false,
                "name": "push_to_kafka"
              },
              "action": "HIDE"
            },
            "hideOnUI": false,
            "name": "request_timeout_ms"
          }
        ]
      }
    },
    {
      "type": "TestEdge",
      "properties": {
        "general": [
          {
            "field_type": "TEXT",
            "default": "Heya",
            "editable": true,
            "required": false,
            "category": "general",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "echo_term"
          }
        ],
        "scheduler": [
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "start_time"
          },
          {
            "field_type": "DATE",
            "editable": true,
            "required": true,
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_date"
          },
          {
            "field_type": "TIME",
            "editable": true,
            "required": true,
            "category": "scheduler",
            "unique": false,
            "advanced": false,
            "appKillNeeded": true,
            "hideOnUI": false,
            "default": "",
            "name": "end_time"
          }
        ],
        "resource": [
          {
            "field_options": [
              "adc-data-hadoop-test",
              "adc-data-sparkgpu",
              "adc-data-hbase",
              "dpgcp-use1d-purple-hadoop",
              "adc-data-hadoop",
              "dpgcp-usw1b-hadoop-staging",
              "adc-crawler-hbase",
              "dpgcp-use1d-purple-hbase",
              "adc-auto-opt-hadoop"
            ],
            "isMultiple": false,
            "field_type": "LIST",
            "default": "adc-auto-opt-hadoop",
            "editable": true,
            "required": false,
            "description": "",
            "category": "resource",
            "unique": false,
            "advanced": true,
            "appKillNeeded": true,
            "hideOnUI": false,
            "name": "cluster"
          }
        ]
      }
    }
  ]
}